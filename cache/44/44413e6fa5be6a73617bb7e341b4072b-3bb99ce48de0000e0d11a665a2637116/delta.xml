<?xml version="1.0" encoding="UTF-8"?><xdd:delta xmlns:xdd="http://codinuum.com/diffts/delta/" xdd:reversible="false" xdd:lang="java" xdd:digest="MD5_44413e6fa5be6a73617bb7e341b4072b" xdd:digest_="MD5_3bb99ce48de0000e0d11a665a2637116"><xdd:change_attr xdd:path="2/0/1/11/3/0/1/1/1/0/0" xdd:attr="name" xdd:new_value="confirm"/><xdd:change_attr xdd:path="2/0/1/108/3/1/1/0" xdd:attr="name" xdd:new_value="vfs"/><xdd:change xdd:path="2/0/1/76/3/1/2/0" xdd:boundary="0;1"><SimpleMethodInvocationStatement name="linesChanged"></SimpleMethodInvocationStatement></xdd:change><xdd:change xdd:path="2/0/1/45/3/3/0/1/3/4/1/0/0/0"><AmbiguousName name="seg"/></xdd:change><xdd:change xdd:path="2/0/1/45/3/3/0/1/3/4/1/0/0" xdd:boundary="0"><AmbiguousName name="seg.offset"></AmbiguousName></xdd:change><xdd:change_attr xdd:path="2/0/1/7/2/1/1/0/0" xdd:attr="name" xdd:new_value="getTokenMarker"/><xdd:change xdd:path="2/0/1/76/3/1/1/3" xdd:boundary="0;1"><SimpleMethodInvocationStatement name="addLinesToMap"></SimpleMethodInvocationStatement></xdd:change><xdd:change xdd:path="2/0/1/77/3/1/2/0" xdd:boundary="0;1"><SimpleMethodInvocationStatement name="linesChanged"></SimpleMethodInvocationStatement></xdd:change><xdd:change xdd:path="2/0/1/77/3/1/1/2" xdd:boundary="0;1"><SimpleMethodInvocationStatement name="removeLinesFromMap"></SimpleMethodInvocationStatement></xdd:change><xdd:change_attr xdd:path="2/0/1/20/3/4/1/2/1/0" xdd:attr="tid" xdd:new_value="f3f0b34b80e25f6808d740b1b14d6021"/><xdd:change_attr xdd:path="2/0/1/17/3/2/1/1/1/1/1/0/0" xdd:attr="name" xdd:new_value="confirm"/><xdd:change xdd:path="2/0/1/45/3/3/0/1/3/5/3/0/0/0/0/0/0" xdd:boundary="0"><AmbiguousName name="seg.array"></AmbiguousName></xdd:change><xdd:change_attr xdd:path="2/0/1/76/3/1/1/2/1/1/0/0" xdd:attr="name" xdd:new_value="lineCount"/><xdd:change_attr xdd:path="2/0/1/20/3/4/1/2/1/0/0/1" xdd:attr="value" xdd:new_value="filechanged-dirty"/><xdd:change xdd:path="2/0/1/11/3/0/1/1/1/0" xdd:boundary="0"><PrimaryMethodInvocation name="confirm"></PrimaryMethodInvocation></xdd:change><xdd:change_attr xdd:path="2/0/1/109/3/2/1/0/0" xdd:attr="name" xdd:new_value="confirm"/><xdd:change xdd:path="2/0/1/10/3/39/3/6" xdd:boundary="0;1"><SimpleMethodInvocationStatement name="paintSyntaxLine"></SimpleMethodInvocationStatement></xdd:change><xdd:change_attr xdd:path="2/0/1/77/3/1/1/3/1" xdd:attr="name" xdd:new_value="linesChanged"/><xdd:change_attr xdd:path="2/0/1/20/3/4/1/2/1/0/0/2" xdd:attr="value" xdd:new_value="filechanged-focus"/><xdd:change_attr xdd:path="2/0/1/7/2/1/1/0/0/1" xdd:attr="name" xdd:new_value="getTokenMarker"/><xdd:change xdd:path="2/0/1/59/3/4/0/0/1/0"><IntegerLiteral value="0"/></xdd:change><xdd:change xdd:path="2/0/1/45/3/3/0/1/3/3/1/0"><AmbiguousName name="seg"/></xdd:change><xdd:change_attr xdd:path="2/0/1/7/2/1/2/0/0" xdd:attr="name" xdd:new_value="getTokenMarker"/><xdd:change xdd:path="2/0/1/17/3/2/1/1/1/1/1/0" xdd:boundary="0"><PrimaryMethodInvocation name="confirm"></PrimaryMethodInvocation></xdd:change><xdd:change_attr xdd:path="2/0/1/77/3/1/1/2/1/1/0/0" xdd:attr="name" xdd:new_value="lineCount"/><xdd:change xdd:path="2/0/1/45/3/3/0/1/3/4/1/0/1/0"><AmbiguousName name="seg"/></xdd:change><xdd:change xdd:path="2/0/1/109/3/2/1/0" xdd:boundary="0"><PrimaryMethodInvocation name="confirm"></PrimaryMethodInvocation></xdd:change><xdd:change_attr xdd:path="2/0/1/7/2/1" xdd:attr="tid" xdd:new_value="e4b74cbb4fc92ddfce7ab3ae66dd8583"/><xdd:change xdd:path="2/0/1/45/3/3/0/1/3/5/3/0/0/0/0/0/0/0"><AmbiguousName name="seg"/></xdd:change><xdd:change xdd:path="2/0/1/17/3/10/1/0/2/0/2/2/1/0/0/0" xdd:boundary="0"><PrimaryMethodInvocationStatement name="writeLock"></PrimaryMethodInvocationStatement></xdd:change><xdd:change_attr xdd:path="2/0/1/10/3/20/2/0/1/0/1/0" xdd:attr="value" xdd:new_value="print.color"/><xdd:change xdd:path="2/0/1/55/3/8/1/0/0/0/1/1/2" xdd:boundary="0"><Name name="RESearchMatcher.RE_SYNTAX_JEDIT"/></xdd:change><xdd:change_attr xdd:path="2/0/1/76/3/1/1/3/1" xdd:attr="name" xdd:new_value="addLinesToMap"/><xdd:change xdd:path="2/0/1/45/3/3/0/1/3/2/0/0" xdd:boundary="0"><AmbiguousName name="seg.count"></AmbiguousName></xdd:change><xdd:change_attr xdd:path="2/0/1/7/2/1/2/0/0/1" xdd:attr="name" xdd:new_value="getTokenMarker"/><xdd:change_attr xdd:path="2/0/1/20/3/4/1/4/1/0/0" xdd:attr="name" xdd:new_value="confirm"/><xdd:change_attr xdd:path="2/0/1/45/3/3/0/1/3/2" xdd:attr="tid" xdd:new_value="028cfd4bb0b444954c0aa03f6ae8ecf4"/><xdd:change xdd:path="2/0/1/59/3/0" xdd:boundary="0;1"><SimpleMethodInvocationStatement name="linesChanged"></SimpleMethodInvocationStatement></xdd:change><xdd:change_attr xdd:path="2/0/1/57/3/2/1/1" xdd:attr="name" xdd:new_value="getElement"/><xdd:change_attr xdd:path="2/0/1/10/3/20/2/0/1/0/1" xdd:attr="name" xdd:new_value="getBooleanProperty"/><xdd:change xdd:path="2/0/1/57/0/0"><Private/></xdd:change><xdd:change_attr xdd:path="2/0/1/57/3/2/1/1/1" xdd:attr="name" xdd:new_value="getElement"/><xdd:change xdd:path="2/0/1/57/3/1/0"><Name name="info"/></xdd:change><xdd:change_attr xdd:path="2/0/1/59/3/4/0" xdd:attr="tid" xdd:new_value="db4b1e0014366cd465c1c317d455ef82"/><xdd:change xdd:path="2/0/1/20/3/4/1/4/1/0" xdd:boundary="0"><PrimaryMethodInvocation name="confirm"></PrimaryMethodInvocation></xdd:change><xdd:change xdd:path="2/0/1/77/3/1/1/3" xdd:boundary="0;1"><SimpleMethodInvocationStatement name="linesChanged"></SimpleMethodInvocationStatement></xdd:change><xdd:change_attr xdd:path="2/0/1/77/3/1/1/2/1" xdd:attr="name" xdd:new_value="removeLinesFromMap"/><xdd:change xdd:path="2/0/1/45/3/3/0/1/3/1/0/2"><FieldAccess name="seg"/></xdd:change><xdd:change_attr xdd:path="2/0/1/57/2/0" xdd:attr="name" xdd:new_value="tokenMarker"/><xdd:change xdd:path="2/0/1/45/3/3/0/1/3/4/1/0/1" xdd:boundary="0"><AmbiguousName name="seg.count"></AmbiguousName></xdd:change><xdd:change xdd:path="2/0/1/59/3/4/3" xdd:boundary="0;1"><SimpleMethodInvocationStatement name="markTokens"></SimpleMethodInvocationStatement></xdd:change><xdd:change xdd:path="2/0/1/76/3/1/1/2" xdd:boundary="0;1"><SimpleMethodInvocationStatement name="linesChanged"></SimpleMethodInvocationStatement></xdd:change><xdd:change_attr xdd:path="2/0/1/45/3/3/0/1/3/5/3/0" xdd:attr="tid" xdd:new_value="5d9ee4d9828db329aca0c30618142960"/><xdd:change xdd:path="2/0/1/17/3/10/1/0/2/0/2/2/1/0/1/0/0" xdd:boundary="0"><PrimaryMethodInvocationStatement name="writeUnlock"></PrimaryMethodInvocationStatement></xdd:change><xdd:change_attr xdd:path="2/0/1/10/3/20/2/0/1/0" xdd:attr="name" xdd:new_value="getBooleanProperty"/><xdd:change_attr xdd:path="2/0/1/7/2/1/0" xdd:attr="name" xdd:new_value="getBooleanProperty"/><xdd:change xdd:path="2/0/1/45/3/3/0/1/3/3/1" xdd:boundary="0"><AmbiguousName name="seg.offset"></AmbiguousName></xdd:change><xdd:change xdd:path="2/0/1/45/3/3/0/1/3/2/0/0/0"><AmbiguousName name="seg"/></xdd:change><xdd:insert xdd:stid="150" xdd:path="2/0/1/113_4"><ClassDeclaration name="LineInfo"><ClassSpecifier><Modifiers name="LineInfo#C"><Public/><Static/></Modifiers></ClassSpecifier><ClassBody name="LineInfo"><FieldDeclaration vdids="context[0"><Modifiers name="context#f"><Public/></Modifiers><ReferenceType name="TokenMarker.LineContext"/><VariableDeclarator name="context" dims="0" islocal="false"/></FieldDeclaration><MethodDeclaration name="getFirstToken" signature="()LToken;"><Modifiers name="getFirstToken#m"><Public/></Modifiers><ReferenceType name="Token"/><MethodBody name="getFirstToken" signature="()LToken;"><ReturnStatement><FieldAccess name="firstToken"/></ReturnStatement></MethodBody></MethodDeclaration><MethodDeclaration name="getLastToken" signature="()LToken;"><Modifiers name="getLastToken#m"><Public/></Modifiers><ReferenceType name="Token"/><MethodBody name="getLastToken" signature="()LToken;"><ReturnStatement><FieldAccess name="lastToken"/></ReturnStatement></MethodBody></MethodDeclaration><MethodDeclaration name="addToken" signature="(IB)V"><Modifiers name="addToken#m"><Public/></Modifiers><Void/><Parameters name="addToken"><Parameter name="length" dims="0" va="false"><IntType/></Parameter><Parameter name="id" dims="0" va="false"><ByteType/></Parameter></Parameters><MethodBody name="addToken" signature="(IB)V"><IfStatement tid="b99c4421ee7cec9f5e9245aacbdde010" __tid="Expression.BinaryOperator.And"><And><Ge><Name name="id"/><Name name="Token.INTERNAL_FIRST"/></Ge><Le><Name name="id"/><Name name="Token.INTERNAL_LAST"/></Le></And><ThrowStatement><StandardInstanceCreation name="InternalError"><ReferenceType name="InternalError"/><Arguments name="InternalError"><Add><StringLiteral value="Invalid id: "/><Name name="id"/></Add></Arguments></StandardInstanceCreation></ThrowStatement></IfStatement><IfStatement tid="5b1f3bfb4ae293ff4bf7da320953a63d" __tid="Expression.BinaryOperator.And"><And><Eq><Name name="length"/><IntegerLiteral value="0"/></Eq><NotEq><Name name="id"/><Name name="Token.END"/></NotEq></And><ReturnStatement/></IfStatement><IfStatement tid="f68fe7e6ccc52eae3190d88a7a810d36" __tid="Expression.BinaryOperator.Eq"><Eq><FieldAccess name="firstToken"/><NullLiteral/></Eq><Block tid="" __tid="block"><AssignStatement tid=""><FieldAccess name="firstToken"/><StandardInstanceCreation name="Token"><ReferenceType name="Token"/><Arguments name="Token"><Name name="length"/><Name name="id"/></Arguments></StandardInstanceCreation></AssignStatement><AssignStatement tid=""><FieldAccess name="lastToken"/><FieldAccess name="firstToken"/></AssignStatement></Block><IfStatement tid="a637f3c5bc63a60b151b8aa84615f870" __tid="Expression.BinaryOperator.Eq"><Eq><FieldAccess name="lastToken"/><NullLiteral/></Eq><Block tid="" __tid="block"><AssignStatement tid=""><FieldAccess name="lastToken"/><FieldAccess name="firstToken"/></AssignStatement><AssignStatement tid=""><AmbiguousName name="firstToken.length"><AmbiguousName name="firstToken"/></AmbiguousName><Name name="length"/></AssignStatement><AssignStatement tid=""><AmbiguousName name="firstToken.id"><AmbiguousName name="firstToken"/></AmbiguousName><Name name="id"/></AssignStatement></Block><IfStatement tid="5880ce097c866af0a1b1a59dee4f6fb0" __tid="Expression.BinaryOperator.Eq"><Eq><AmbiguousName name="lastToken.id"><AmbiguousName name="lastToken"/></AmbiguousName><Name name="id"/></Eq><Block tid="" __tid="block"><AddAssignStatement tid=""><AmbiguousName name="lastToken.length"><AmbiguousName name="lastToken"/></AmbiguousName><Name name="length"/></AddAssignStatement></Block><IfStatement tid="e263c47eea3cd1db081c35cea0513c9c" __tid="Expression.BinaryOperator.Eq"><Eq><AmbiguousName name="lastToken.next"><AmbiguousName name="lastToken"/></AmbiguousName><NullLiteral/></Eq><Block tid="" __tid="block"><AssignStatement tid=""><AmbiguousName name="lastToken.next"><AmbiguousName name="lastToken"/></AmbiguousName><StandardInstanceCreation name="Token"><ReferenceType name="Token"/><Arguments name="Token"><Name name="length"/><Name name="id"/></Arguments></StandardInstanceCreation></AssignStatement><AssignStatement tid=""><AmbiguousName name="lastToken.next.prev"><AmbiguousName name="lastToken.next"><AmbiguousName name="lastToken"/></AmbiguousName></AmbiguousName><FieldAccess name="lastToken"/></AssignStatement><AssignStatement tid=""><FieldAccess name="lastToken"/><AmbiguousName name="lastToken.next"><AmbiguousName name="lastToken"/></AmbiguousName></AssignStatement></Block><Block tid="" __tid="block"><AssignStatement tid=""><FieldAccess name="lastToken"/><AmbiguousName name="lastToken.next"><AmbiguousName name="lastToken"/></AmbiguousName></AssignStatement><AssignStatement tid=""><AmbiguousName name="lastToken.length"><AmbiguousName name="lastToken"/></AmbiguousName><Name name="length"/></AssignStatement><AssignStatement tid=""><AmbiguousName name="lastToken.id"><AmbiguousName name="lastToken"/></AmbiguousName><Name name="id"/></AssignStatement></Block></IfStatement></IfStatement></IfStatement></IfStatement></MethodBody></MethodDeclaration><FieldDeclaration vdids="firstToken[0"><ReferenceType name="Token"/><VariableDeclarator name="firstToken" dims="0" islocal="false"/></FieldDeclaration><FieldDeclaration vdids="lastToken[0"><ReferenceType name="Token"/><VariableDeclarator name="lastToken" dims="0" islocal="false"/></FieldDeclaration><FieldDeclaration vdids="tokensValid[0"><BooleanType/><VariableDeclarator name="tokensValid" dims="0" islocal="false"/></FieldDeclaration><FieldDeclaration vdids="width[0"><IntType/><VariableDeclarator name="width" dims="0" islocal="false"/></FieldDeclaration><FieldDeclaration vdids="foldLevel[0"><IntType/><VariableDeclarator name="foldLevel" dims="0" islocal="false"/></FieldDeclaration><FieldDeclaration vdids="foldLevelValid[0"><BooleanType/><VariableDeclarator name="foldLevelValid" dims="0" islocal="false"/></FieldDeclaration><FieldDeclaration vdids="visible[0"><BooleanType/><VariableDeclarator name="visible" dims="0" islocal="false"/></FieldDeclaration></ClassBody></ClassDeclaration></xdd:insert><xdd:insert xdd:stid="180" xdd:path="2/0/1/113_3"><InterfaceDeclaration name="FoldListener"><InterfaceSpecifier><Modifiers name="FoldListener#I"><Public/><Static/></Modifiers></InterfaceSpecifier><InterfaceBody name="FoldListener"><MethodDeclaration name="foldLevelsChanged" signature="(II)V"><Void/><Parameters name="foldLevelsChanged"><Parameter name="firstLine" dims="0" va="false"><IntType/></Parameter><Parameter name="lastLine" dims="0" va="false"><IntType/></Parameter></Parameters></MethodDeclaration><MethodDeclaration name="foldStructureChanged" signature="()V"><Void/></MethodDeclaration></InterfaceBody></InterfaceDeclaration></xdd:insert><xdd:insert xdd:stid="140" xdd:path="2/0/1/113_2"><MethodDeclaration name="fireFoldStructureChanged" signature="()V"><Modifiers name="fireFoldStructureChanged#m"><Private/></Modifiers><Void/><MethodBody name="fireFoldStructureChanged" signature="()V"><BasicForStatement><ForInit tid="db4b1e0014366cd465c1c317d455ef82" __tid="LocalVariableDeclaration(false,)"><LocalVariableDeclaration vdids="i[0"><IntType/><VariableDeclarator name="i" dims="0" islocal="true"><IntegerLiteral value="0"/></VariableDeclarator></LocalVariableDeclaration></ForInit><ForCond tid="8ebab7a204a2b8a0f53d53dc5b82cdd9" __tid="Expression.BinaryOperator.Lt"><Lt><Name name="i"/><PrimaryMethodInvocation name="size"><FieldAccess name="foldListeners"/><Arguments name="size"/></PrimaryMethodInvocation></Lt></ForCond><ForUpdate tid="bdb8c889613f58d4d93169f9b8008aa4" __tid="Expression.UnaryOperator.PostIncrement"><PostIncrement><Name name="i"/></PostIncrement></ForUpdate><Block tid="" __tid="block"><PrimaryMethodInvocationStatement name="foldStructureChanged"><ParenthesizedExpression tid="9247e207a9881859b73607d9a959fc15" __tid="Expression.Cast"><Cast><ReferenceType name="FoldListener"/><PrimaryMethodInvocation name="elementAt"><FieldAccess name="foldListeners"/><Arguments name="elementAt"><Name name="i"/></Arguments></PrimaryMethodInvocation></Cast></ParenthesizedExpression><Arguments name="foldStructureChanged"/></PrimaryMethodInvocationStatement></Block></BasicForStatement></MethodBody></MethodDeclaration></xdd:insert><xdd:insert xdd:stid="171" xdd:path="2/0/1/113_1"><MethodDeclaration name="fireFoldLevelsChanged" signature="(II)V"><Modifiers name="fireFoldLevelsChanged#m"><Private/></Modifiers><Void/><Parameters name="fireFoldLevelsChanged"><Parameter name="firstLine" dims="0" va="false"><IntType/></Parameter><Parameter name="lastLine" dims="0" va="false"><IntType/></Parameter></Parameters><MethodBody name="fireFoldLevelsChanged" signature="(II)V"><BasicForStatement><ForInit tid="db4b1e0014366cd465c1c317d455ef82" __tid="LocalVariableDeclaration(false,)"><LocalVariableDeclaration vdids="i[0"><IntType/><VariableDeclarator name="i" dims="0" islocal="true"><IntegerLiteral value="0"/></VariableDeclarator></LocalVariableDeclaration></ForInit><ForCond tid="8ebab7a204a2b8a0f53d53dc5b82cdd9" __tid="Expression.BinaryOperator.Lt"><Lt><Name name="i"/><PrimaryMethodInvocation name="size"><FieldAccess name="foldListeners"/><Arguments name="size"/></PrimaryMethodInvocation></Lt></ForCond><ForUpdate tid="bdb8c889613f58d4d93169f9b8008aa4" __tid="Expression.UnaryOperator.PostIncrement"><PostIncrement><Name name="i"/></PostIncrement></ForUpdate><Block tid="" __tid="block"><PrimaryMethodInvocationStatement name="foldLevelsChanged"><ParenthesizedExpression tid="9247e207a9881859b73607d9a959fc15" __tid="Expression.Cast"><Cast><ReferenceType name="FoldListener"/><PrimaryMethodInvocation name="elementAt"><FieldAccess name="foldListeners"/><Arguments name="elementAt"><Name name="i"/></Arguments></PrimaryMethodInvocation></Cast></ParenthesizedExpression><Arguments name="foldLevelsChanged"><Name name="firstLine"/><Name name="lastLine"/></Arguments></PrimaryMethodInvocationStatement></Block></BasicForStatement></MethodBody></MethodDeclaration></xdd:insert><xdd:insert xdd:stid="176" xdd:path="2/0/1/112_4"><MethodDeclaration name="linesChanged" signature="(II)V"><Modifiers name="linesChanged#m"><Private/></Modifiers><Void/><Parameters name="linesChanged"><Parameter name="index" dims="0" va="false"><IntType/></Parameter><Parameter name="lines" dims="0" va="false"><IntType/></Parameter></Parameters><MethodBody name="linesChanged" signature="(II)V"><BasicForStatement><ForInit tid="db4b1e0014366cd465c1c317d455ef82" __tid="LocalVariableDeclaration(false,)"><LocalVariableDeclaration vdids="i[0"><IntType/><VariableDeclarator name="i" dims="0" islocal="true"><IntegerLiteral value="0"/></VariableDeclarator></LocalVariableDeclaration></ForInit><ForCond tid="b01fc382778f30922c46dffb1348638b" __tid="Expression.BinaryOperator.Lt"><Lt><Name name="i"/><Name name="lines"/></Lt></ForCond><ForUpdate tid="bdb8c889613f58d4d93169f9b8008aa4" __tid="Expression.UnaryOperator.PostIncrement"><PostIncrement><Name name="i"/></PostIncrement></ForUpdate><Block tid="" __tid="block"><LocalVariableDeclarationStatement vdids="info[0"><ReferenceType name="LineInfo"/><VariableDeclarator name="info" dims="0" islocal="true"><ArrayAccess><FieldAccess name="lineInfo"/><Add><Name name="index"/><Name name="i"/></Add></ArrayAccess></VariableDeclarator></LocalVariableDeclarationStatement><AssignStatement tid=""><FieldAccess name="tokensValid"><Name name="info"/></FieldAccess><False/></AssignStatement><AssignStatement tid=""><FieldAccess name="foldLevelValid"><Name name="info"/></FieldAccess><False/></AssignStatement></Block></BasicForStatement></MethodBody></MethodDeclaration></xdd:insert><xdd:insert xdd:stid="101" xdd:path="2/0/1/112_3"><MethodDeclaration name="removeLinesFromMap" signature="(II)V"><Modifiers name="removeLinesFromMap#m"><Private/></Modifiers><Void/><Parameters name="removeLinesFromMap"><Parameter name="index" dims="0" va="false"><IntType/></Parameter><Parameter name="lines" dims="0" va="false"><IntType/></Parameter></Parameters><MethodBody name="removeLinesFromMap" signature="(II)V"><IfStatement tid="19a3dac6bf1c1a42aeae61a3714e2317" __tid="Expression.BinaryOperator.Le"><Le><Name name="lines"/><IntegerLiteral value="0"/></Le><ReturnStatement/></IfStatement><LocalVariableDeclarationStatement vdids="length[0"><IntType/><VariableDeclarator name="length" dims="0" islocal="true"><Add><Name name="index"/><Name name="lines"/></Add></VariableDeclarator></LocalVariableDeclarationStatement><LocalVariableDeclarationStatement vdids="virtualLine[0"><IntType/><VariableDeclarator name="virtualLine" dims="0" islocal="true"><SimpleMethodInvocation name="physicalToVirtual"><Arguments name="physicalToVirtual"><Name name="index"/></Arguments></SimpleMethodInvocation></VariableDeclarator></LocalVariableDeclarationStatement><LocalVariableDeclarationStatement vdids="virtualLength[0"><IntType/><VariableDeclarator name="virtualLength" dims="0" islocal="true"><SimpleMethodInvocation name="physicalToVirtual"><Arguments name="physicalToVirtual"><Name name="length"/></Arguments></SimpleMethodInvocation></VariableDeclarator></LocalVariableDeclarationStatement><IfStatement tid="5da03634798b087c2f4eb7da66ef48d7" __tid="Expression.BinaryOperator.Le"><Le><Name name="length"/><ArrayAccess><FieldAccess name="virtualLines"/><Subt><FieldAccess name="virtualLineCount"/><IntegerLiteral value="1"/></Subt></ArrayAccess></Le><Block tid="" __tid="block"><TypeMethodInvocationStatement name="System" ident="arraycopy"><Arguments name="arraycopy"><FieldAccess name="virtualLines"/><Name name="virtualLength"/><FieldAccess name="virtualLines"/><Name name="virtualLine"/><Subt><FieldAccess name="length"><FieldAccess name="virtualLines"/></FieldAccess><Name name="virtualLength"/></Subt></Arguments></TypeMethodInvocationStatement><BasicForStatement><ForInit tid="60a6898b9dbc1122b3c6abbf4de330b5" __tid="LocalVariableDeclaration(false,)"><LocalVariableDeclaration vdids="i[0"><IntType/><VariableDeclarator name="i" dims="0" islocal="true"><Name name="virtualLine"/></VariableDeclarator></LocalVariableDeclaration></ForInit><ForCond tid="db685f129dbcb4cb240d976ef49d9136" __tid="Expression.BinaryOperator.Lt"><Lt><Name name="i"/><Subt><FieldAccess name="virtualLineCount"/><ParenthesizedExpression tid="c3625eccf6905da9e45d22445a8436ca" __tid="Expression.BinaryOperator.Sub"><Subt><Name name="virtualLength"/><Name name="virtualLine"/></Subt></ParenthesizedExpression></Subt></Lt></ForCond><ForUpdate tid="bdb8c889613f58d4d93169f9b8008aa4" __tid="Expression.UnaryOperator.PostIncrement"><PostIncrement><Name name="i"/></PostIncrement></ForUpdate><SubtAssignStatement tid=""><ArrayAccess><FieldAccess name="virtualLines"/><Name name="i"/></ArrayAccess><Name name="lines"/></SubtAssignStatement></BasicForStatement></Block></IfStatement><SubtAssignStatement tid=""><FieldAccess name="virtualLineCount"/><ParenthesizedExpression tid="c3625eccf6905da9e45d22445a8436ca" __tid="Expression.BinaryOperator.Sub"><Subt><Name name="virtualLength"/><Name name="virtualLine"/></Subt></ParenthesizedExpression></SubtAssignStatement><SubtAssignStatement tid=""><FieldAccess name="lineCount"/><Name name="lines"/></SubtAssignStatement><TypeMethodInvocationStatement name="System" ident="arraycopy"><Arguments name="arraycopy"><FieldAccess name="lineInfo"/><Name name="length"/><FieldAccess name="lineInfo"/><Name name="index"/><Subt><FieldAccess name="length"><FieldAccess name="lineInfo"/></FieldAccess><Name name="length"/></Subt></Arguments></TypeMethodInvocationStatement></MethodBody></MethodDeclaration></xdd:insert><xdd:insert xdd:stid="103" xdd:path="2/0/1/112_2"><MethodDeclaration name="addLinesToMap" signature="(II)V"><Modifiers name="addLinesToMap#m"><Private/></Modifiers><Void/><Parameters name="addLinesToMap"><Parameter name="index" dims="0" va="false"><IntType/></Parameter><Parameter name="lines" dims="0" va="false"><IntType/></Parameter></Parameters><MethodBody name="addLinesToMap" signature="(II)V"><IfStatement tid="19a3dac6bf1c1a42aeae61a3714e2317" __tid="Expression.BinaryOperator.Le"><Le><Name name="lines"/><IntegerLiteral value="0"/></Le><ReturnStatement/></IfStatement><LocalVariableDeclarationStatement vdids="prev[0"><ReferenceType name="LineInfo"/><VariableDeclarator name="prev" dims="0" islocal="true"><ArrayAccess><FieldAccess name="lineInfo"/><Subt><Name name="index"/><IntegerLiteral value="1"/></Subt></ArrayAccess></VariableDeclarator></LocalVariableDeclarationStatement><LocalVariableDeclarationStatement vdids="virtualLine[0"><IntType/><VariableDeclarator name="virtualLine" dims="0" islocal="true"/></LocalVariableDeclarationStatement><IfStatement tid="63297801237edb29ae431a4befe811cc" __tid="Expression.BinaryOperator.Eq"><Eq><Name name="index"/><FieldAccess name="lineCount"/></Eq><AssignStatement tid=""><Name name="virtualLine"/><FieldAccess name="virtualLineCount"/></AssignStatement><AssignStatement tid=""><Name name="virtualLine"/><SimpleMethodInvocation name="physicalToVirtual"><Arguments name="physicalToVirtual"><Name name="index"/></Arguments></SimpleMethodInvocation></AssignStatement></IfStatement><LocalVariableDeclarationStatement vdids="virtualLength[0"><IntType/><VariableDeclarator name="virtualLength" dims="0" islocal="true"/></LocalVariableDeclarationStatement><IfStatement tid="85e7d325aee405c05dd3b3d4534a6fd2" __tid="Primary.FieldAccess()"><FieldAccess name="visible"><Name name="prev"/></FieldAccess><Block tid="" __tid="block"><AddAssignStatement tid=""><FieldAccess name="virtualLineCount"/><Name name="lines"/></AddAssignStatement><IfStatement tid="875491c1440d2f54282311a8d2bcc365" __tid="Expression.BinaryOperator.Le"><Le><FieldAccess name="length"><FieldAccess name="virtualLines"/></FieldAccess><FieldAccess name="virtualLineCount"/></Le><Block tid="" __tid="block"><LocalVariableDeclarationStatement vdids="virtualLinesN[0"><IntType dimensions="1"/><VariableDeclarator name="virtualLinesN" dims="0" islocal="true"><ArrayCreationDims dims="0"><IntType/><DimExpression><Mult><ParenthesizedExpression tid="9559eceddbd8ebadb6ad815ec79884b5" __tid="Expression.BinaryOperator.Add"><Add><FieldAccess name="virtualLineCount"/><IntegerLiteral value="1"/></Add></ParenthesizedExpression><IntegerLiteral value="2"/></Mult></DimExpression></ArrayCreationDims></VariableDeclarator></LocalVariableDeclarationStatement><TypeMethodInvocationStatement name="System" ident="arraycopy"><Arguments name="arraycopy"><FieldAccess name="virtualLines"/><IntegerLiteral value="0"/><Name name="virtualLinesN"/><IntegerLiteral value="0"/><FieldAccess name="length"><FieldAccess name="virtualLines"/></FieldAccess></Arguments></TypeMethodInvocationStatement><AssignStatement tid=""><FieldAccess name="virtualLines"/><Name name="virtualLinesN"/></AssignStatement></Block></IfStatement><AssignStatement tid=""><Name name="virtualLength"/><Add><Name name="virtualLine"/><Name name="lines"/></Add></AssignStatement><TypeMethodInvocationStatement name="System" ident="arraycopy"><Arguments name="arraycopy"><FieldAccess name="virtualLines"/><Name name="virtualLine"/><FieldAccess name="virtualLines"/><Name name="virtualLength"/><Subt><FieldAccess name="length"><FieldAccess name="virtualLines"/></FieldAccess><Name name="virtualLength"/></Subt></Arguments></TypeMethodInvocationStatement><BasicForStatement><ForInit tid="db4b1e0014366cd465c1c317d455ef82" __tid="LocalVariableDeclaration(false,)"><LocalVariableDeclaration vdids="i[0"><IntType/><VariableDeclarator name="i" dims="0" islocal="true"><IntegerLiteral value="0"/></VariableDeclarator></LocalVariableDeclaration></ForInit><ForCond tid="b01fc382778f30922c46dffb1348638b" __tid="Expression.BinaryOperator.Lt"><Lt><Name name="i"/><Name name="lines"/></Lt></ForCond><ForUpdate tid="bdb8c889613f58d4d93169f9b8008aa4" __tid="Expression.UnaryOperator.PostIncrement"><PostIncrement><Name name="i"/></PostIncrement></ForUpdate><AssignStatement tid=""><ArrayAccess><FieldAccess name="virtualLines"/><Add><Name name="virtualLine"/><Name name="i"/></Add></ArrayAccess><Add><Name name="index"/><Name name="i"/></Add></AssignStatement></BasicForStatement></Block><AssignStatement tid=""><Name name="virtualLength"/><Add><Name name="virtualLine"/><IntegerLiteral value="1"/></Add></AssignStatement></IfStatement><BasicForStatement><ForInit tid="096d11261d4cdea7606bf01fe6b5c416" __tid="LocalVariableDeclaration(false,)"><LocalVariableDeclaration vdids="i[0"><IntType/><VariableDeclarator name="i" dims="0" islocal="true"><Name name="virtualLength"/></VariableDeclarator></LocalVariableDeclaration></ForInit><ForCond tid="53857bfec51b6c4801aa28fe2a9ffd43" __tid="Expression.BinaryOperator.Lt"><Lt><Name name="i"/><FieldAccess name="virtualLineCount"/></Lt></ForCond><ForUpdate tid="bdb8c889613f58d4d93169f9b8008aa4" __tid="Expression.UnaryOperator.PostIncrement"><PostIncrement><Name name="i"/></PostIncrement></ForUpdate><AddAssignStatement tid=""><ArrayAccess><FieldAccess name="virtualLines"/><Name name="i"/></ArrayAccess><Name name="lines"/></AddAssignStatement></BasicForStatement><AddAssignStatement tid=""><FieldAccess name="lineCount"/><Name name="lines"/></AddAssignStatement><IfStatement tid="188f954f120475c019957c36faea1ec0" __tid="Expression.BinaryOperator.Le"><Le><FieldAccess name="length"><FieldAccess name="lineInfo"/></FieldAccess><FieldAccess name="lineCount"/></Le><Block tid="" __tid="block"><LocalVariableDeclarationStatement vdids="lineInfoN[0"><ReferenceType name="LineInfo" dimensions="1"/><VariableDeclarator name="lineInfoN" dims="0" islocal="true"><ArrayCreationDims dims="0"><ReferenceType name="LineInfo"/><DimExpression><Mult><ParenthesizedExpression tid="7dfb0a0eb81c0b544919eb4660a0e3bd" __tid="Expression.BinaryOperator.Add"><Add><FieldAccess name="lineCount"/><IntegerLiteral value="1"/></Add></ParenthesizedExpression><IntegerLiteral value="2"/></Mult></DimExpression></ArrayCreationDims></VariableDeclarator></LocalVariableDeclarationStatement><TypeMethodInvocationStatement name="System" ident="arraycopy"><Arguments name="arraycopy"><FieldAccess name="lineInfo"/><IntegerLiteral value="0"/><Name name="lineInfoN"/><IntegerLiteral value="0"/><FieldAccess name="length"><FieldAccess name="lineInfo"/></FieldAccess></Arguments></TypeMethodInvocationStatement><AssignStatement tid=""><FieldAccess name="lineInfo"/><Name name="lineInfoN"/></AssignStatement></Block></IfStatement><LocalVariableDeclarationStatement vdids="length[0"><IntType/><VariableDeclarator name="length" dims="0" islocal="true"><Add><Name name="index"/><Name name="lines"/></Add></VariableDeclarator></LocalVariableDeclarationStatement><TypeMethodInvocationStatement name="System" ident="arraycopy"><Arguments name="arraycopy"><FieldAccess name="lineInfo"/><Name name="index"/><FieldAccess name="lineInfo"/><Name name="length"/><Subt><FieldAccess name="length"><FieldAccess name="lineInfo"/></FieldAccess><Name name="length"/></Subt></Arguments></TypeMethodInvocationStatement><LocalVariableDeclarationStatement vdids="mainSet[0"><ReferenceType name="ParserRuleSet"/><VariableDeclarator name="mainSet" dims="0" islocal="true"><PrimaryMethodInvocation name="getMainRuleSet"><FieldAccess name="tokenMarker"/><Arguments name="getMainRuleSet"/></PrimaryMethodInvocation></VariableDeclarator></LocalVariableDeclarationStatement><BasicForStatement><ForInit tid="db4b1e0014366cd465c1c317d455ef82" __tid="LocalVariableDeclaration(false,)"><LocalVariableDeclaration vdids="i[0"><IntType/><VariableDeclarator name="i" dims="0" islocal="true"><IntegerLiteral value="0"/></VariableDeclarator></LocalVariableDeclaration></ForInit><ForCond tid="b01fc382778f30922c46dffb1348638b" __tid="Expression.BinaryOperator.Lt"><Lt><Name name="i"/><Name name="lines"/></Lt></ForCond><ForUpdate tid="bdb8c889613f58d4d93169f9b8008aa4" __tid="Expression.UnaryOperator.PostIncrement"><PostIncrement><Name name="i"/></PostIncrement></ForUpdate><Block tid="" __tid="block"><LocalVariableDeclarationStatement vdids="info[0"><ReferenceType name="LineInfo"/><VariableDeclarator name="info" dims="0" islocal="true"><StandardInstanceCreation name="LineInfo"><ReferenceType name="LineInfo"/><Arguments name="LineInfo"/></StandardInstanceCreation></VariableDeclarator></LocalVariableDeclarationStatement><AssignStatement tid=""><FieldAccess name="context"><Name name="info"/></FieldAccess><StandardInstanceCreation name="TokenMarker.LineContext"><ReferenceType name="TokenMarker.LineContext"/><Arguments name="TokenMarker.LineContext"><NullLiteral/><Name name="mainSet"/></Arguments></StandardInstanceCreation></AssignStatement><AssignStatement tid=""><FieldAccess name="visible"><Name name="info"/></FieldAccess><FieldAccess name="visible"><Name name="prev"/></FieldAccess></AssignStatement><AssignStatement tid=""><ArrayAccess><FieldAccess name="lineInfo"/><Add><Name name="index"/><Name name="i"/></Add></ArrayAccess><Name name="info"/></AssignStatement></Block></BasicForStatement></MethodBody></MethodDeclaration></xdd:insert><xdd:move xdd:mid="237" xdd:path_from="2/0/1/57" xdd:path_to="2/0/1/112_1" xdd:boundary_from="3/0;3/1;3/2"/><xdd:insert xdd:stid="148" xdd:path="2/0/1/112_1/3/0_2" xdd:parent="m237" xdd:depth="2"><BasicForStatement><ForInit tid="db4b1e0014366cd465c1c317d455ef82" __tid="LocalVariableDeclaration(false,)"><LocalVariableDeclaration vdids="i[0"><IntType/><VariableDeclarator name="i" dims="0" islocal="true"><IntegerLiteral value="0"/></VariableDeclarator></LocalVariableDeclaration></ForInit><ForCond tid="67655a7cb53fb02a950cfd5aab8ee3c2" __tid="Expression.BinaryOperator.Lt"><Lt><Name name="i"/><FieldAccess name="lineCount"/></Lt></ForCond><ForUpdate tid="bdb8c889613f58d4d93169f9b8008aa4" __tid="Expression.UnaryOperator.PostIncrement"><PostIncrement><Name name="i"/></PostIncrement></ForUpdate><Block tid="" __tid="block"><LocalVariableDeclarationStatement vdids="info[0"><ReferenceType name="LineInfo"/><VariableDeclarator name="info" dims="0" islocal="true"><ArrayAccess><FieldAccess name="lineInfo"/><Name name="i"/></ArrayAccess></VariableDeclarator></LocalVariableDeclarationStatement><AssignStatement tid=""><FieldAccess name="context"><Name name="info"/></FieldAccess><StandardInstanceCreation name="TokenMarker.LineContext"><ReferenceType name="TokenMarker.LineContext"/><Arguments name="TokenMarker.LineContext"><Name name="mainSet"/></Arguments></StandardInstanceCreation></AssignStatement></Block></BasicForStatement></xdd:insert><xdd:move xdd:mid="181" xdd:path_from="2/0/1/57/3/1" xdd:path_to="2/0/1/112_1/3/0/3/1_1" xdd:parent="148" xdd:depth="2" xdd:boundary_from="0;1"/><xdd:insert xdd:stid="109" xdd:path="2/0/1/112_1/3/0/3/2/0_1" xdd:parent="m181" xdd:depth="1"><False/></xdd:insert><xdd:insert xdd:stid="165" xdd:path="2/0/1/112_1/3/0/3/2/0_-1" xdd:parent="m181" xdd:depth="1"><FieldAccess name="tokensValid"></FieldAccess></xdd:insert><xdd:move xdd:mid="180" xdd:path_from="2/0/1/57/3/1/0" xdd:path_to="2/0/1/112_1/3/0/3/2/0/0" xdd:parent="165" xdd:depth="1"/><xdd:move xdd:mid="182" xdd:path_from="2/0/1/57/3/0/0/1" xdd:path_to="2/0/1/112_1/3/0/3/1/1/1/0_-1" xdd:parent="148" xdd:depth="5"/><xdd:insert xdd:stid="187" xdd:path="2/0/1/112_1/3/0_1" xdd:parent="m237" xdd:depth="2"><LocalVariableDeclarationStatement vdids="mainSet[0"><ReferenceType name="ParserRuleSet"/><VariableDeclarator name="mainSet" dims="0" islocal="true"><PrimaryMethodInvocation name="getMainRuleSet"><Arguments name="getMainRuleSet"/></PrimaryMethodInvocation></VariableDeclarator></LocalVariableDeclarationStatement></xdd:insert><xdd:move xdd:mid="68" xdd:path_from="2/0/1/10/3/39/3/6/0" xdd:path_to="2/0/1/112_1/3/0/1/0/0_-1" xdd:parent="187" xdd:depth="3"/><xdd:move xdd:mid="190" xdd:path_from="2/0/1/10/3/20/1" xdd:path_to="2/0/1/112_1/3/0_-1" xdd:parent="m237" xdd:depth="2" xdd:boundary_from="0"/><xdd:move xdd:mid="84" xdd:path_from="2/0/1/10/3/20/1/0" xdd:path_to="2/0/1/112_1/3/0/0_1" xdd:parent="m190" xdd:depth="1"/><xdd:insert xdd:stid="173" xdd:path="2/0/1/110/2/1_1"><IfStatement tid="4bf113ff6cbb98525e276c4175221e45" __tid="Expression.BinaryOperator.Neq"><NotEq><Name name="lineSeparator"/><NullLiteral/></NotEq><SimpleMethodInvocationStatement name="putProperty"><Arguments name="putProperty"><FieldAccess name="LINESEP"/><Name name="lineSeparator"/></Arguments></SimpleMethodInvocationStatement></IfStatement></xdd:insert><xdd:insert xdd:stid="160" xdd:path="2/0/1/110/2/0_-3"><LocalVariableDeclarationStatement vdids="lineSeparator[0"><ReferenceType name="String"/><VariableDeclarator name="lineSeparator" dims="0" islocal="true"><Cast><ReferenceType name="String"/><SimpleMethodInvocation name="getProperty"><Arguments name="getProperty"><FieldAccess name="LINESEP"/></Arguments></SimpleMethodInvocation></Cast></VariableDeclarator></LocalVariableDeclarationStatement></xdd:insert><xdd:insert xdd:stid="117" xdd:path="2/0/1/109/3/2/1/0/0/0_1"><StringLiteral value="autosave-found"/></xdd:insert><xdd:insert xdd:stid="162" xdd:path="2/0/1/109/3/2/1/0/0_-1"><FieldAccess name="GUIUtilities"/></xdd:insert><xdd:move xdd:mid="198" xdd:path_from="2/0/1/108/3/1" xdd:path_to="2/0/1/108/3/2_1"/><xdd:insert xdd:stid="121" xdd:path="2/0/1/107_9"><FieldDeclaration vdids="foldListeners[0"><Modifiers name="foldListeners#f"><Private/></Modifiers><ReferenceType name="Vector"/><VariableDeclarator name="foldListeners" dims="0" islocal="false"/></FieldDeclaration></xdd:insert><xdd:insert xdd:stid="95" xdd:path="2/0/1/107_8"><FieldDeclaration vdids="virtualLineCount[0"><Modifiers name="virtualLineCount#f"><Private/></Modifiers><IntType/><VariableDeclarator name="virtualLineCount" dims="0" islocal="false"/></FieldDeclaration></xdd:insert><xdd:insert xdd:stid="124" xdd:path="2/0/1/107_7"><FieldDeclaration vdids="virtualLines[0"><Modifiers name="virtualLines#f"><Private/></Modifiers><IntType dimensions="1"/><VariableDeclarator name="virtualLines" dims="0" islocal="false"/></FieldDeclaration></xdd:insert><xdd:insert xdd:stid="102" xdd:path="2/0/1/107_6"><FieldDeclaration vdids="nextLineRequested[0"><Modifiers name="nextLineRequested#f"><Private/></Modifiers><BooleanType/><VariableDeclarator name="nextLineRequested" dims="0" islocal="false"/></FieldDeclaration></xdd:insert><xdd:insert xdd:stid="188" xdd:path="2/0/1/107_5"><FieldDeclaration vdids="lastTokenizedLine[0"><Modifiers name="lastTokenizedLine#f"><Private/></Modifiers><IntType/><VariableDeclarator name="lastTokenizedLine" dims="0" islocal="false"/></FieldDeclaration></xdd:insert><xdd:insert xdd:stid="144" xdd:path="2/0/1/107_4"><FieldDeclaration vdids="lineCount[0"><Modifiers name="lineCount#f"><Private/></Modifiers><IntType/><VariableDeclarator name="lineCount" dims="0" islocal="false"/></FieldDeclaration></xdd:insert><xdd:insert xdd:stid="105" xdd:path="2/0/1/107_3"><FieldDeclaration vdids="lineInfo[0"><Modifiers name="lineInfo#f"><Private/></Modifiers><ReferenceType name="LineInfo" dimensions="1"/><VariableDeclarator name="lineInfo" dims="0" islocal="false"/></FieldDeclaration></xdd:insert><xdd:insert xdd:stid="154" xdd:path="2/0/1/107_2"><FieldDeclaration vdids="seg[0"><Modifiers name="seg#f"><Private/></Modifiers><VariableDeclarator name="seg" dims="0" islocal="false"/></FieldDeclaration></xdd:insert><xdd:move xdd:mid="1" xdd:path_from="2/0/1/59/3/1/0" xdd:path_to="2/0/1/107_2/1_-1" xdd:parent="154" xdd:depth="1"/><xdd:move xdd:mid="226" xdd:path_from="2/0/1/99" xdd:path_to="2/0/1/107_1"/><xdd:move xdd:mid="67" xdd:path_from="2/0/1/89/2/0" xdd:path_to="2/0/1/90/2/0_1"/><xdd:move xdd:mid="63" xdd:path_from="2/0/1/88/2/0" xdd:path_to="2/0/1/89/2/0_1"/><xdd:move xdd:mid="229" xdd:path_from="2/0/1/118/1/1/3/0" xdd:path_to="2/0/1/77/3/1_1"/><xdd:move xdd:mid="209" xdd:path_from="2/0/1/77/3/1/1/2/1/1" xdd:path_to="2/0/1/77/3/1/1/3/1/0_1" xdd:boundary_from="0"/><xdd:move xdd:mid="184" xdd:path_from="2/0/1/77/3/1/1/2/1/1/0/0" xdd:path_to="2/0/1/77/3/1/1/3/1/0_1/0_-1" xdd:parent="m209" xdd:depth="1"/><xdd:move xdd:mid="83" xdd:path_from="2/0/1/77/3/1/1/3/1/1" xdd:path_to="2/0/1/77/3/1/1/2/1/0_1"/><xdd:move xdd:mid="221" xdd:path_from="2/0/1/118/1/0/3/0" xdd:path_to="2/0/1/76/3/1_1"/><xdd:move xdd:mid="203" xdd:path_from="2/0/1/76/3/1/1/2" xdd:path_to="2/0/1/76/3/1/1/3_1" xdd:boundary_from="0;1/1/0"/><xdd:move xdd:mid="178" xdd:path_from="2/0/1/76/3/1/1/2/1/1/0/0" xdd:path_to="2/0/1/76/3/1/1/3_1/0/1/0_-1" xdd:parent="m203" xdd:depth="3"/><xdd:insert xdd:stid="119" xdd:path="2/0/1/73/1/0_-17"><AssignStatement tid=""><FieldAccess name="lastTokenizedLine"/><Minus><IntegerLiteral value="1"/></Minus></AssignStatement></xdd:insert><xdd:insert xdd:stid="133" xdd:path="2/0/1/73/1/0_-18"><AssignStatement tid=""><FieldAccess name="seg"/></AssignStatement></xdd:insert><xdd:move xdd:mid="187" xdd:path_from="2/0/1/59/3/1/1/0" xdd:path_to="2/0/1/73/1/0_-18/0_1" xdd:parent="133" xdd:depth="1"/><xdd:insert xdd:stid="146" xdd:path="2/0/1/73/1/0_-19"><AssignStatement tid=""><FieldAccess name="foldListeners"/><StandardInstanceCreation name="Vector"><ReferenceType name="Vector"/><Arguments name="Vector"/></StandardInstanceCreation></AssignStatement></xdd:insert><xdd:insert xdd:stid="166" xdd:path="2/0/1/73/1/0_-20"><AssignStatement tid=""><FieldAccess name="virtualLines"/><ArrayCreationDims dims="0"><IntType/><DimExpression><IntegerLiteral value="1"/></DimExpression></ArrayCreationDims></AssignStatement></xdd:insert><xdd:insert xdd:stid="158" xdd:path="2/0/1/73/1/0_-21"><AssignStatement tid=""><FieldAccess name="virtualLineCount"/><IntegerLiteral value="1"/></AssignStatement></xdd:insert><xdd:insert xdd:stid="167" xdd:path="2/0/1/73/1/0_-22"><AssignStatement tid=""><FieldAccess name="visible"><ArrayAccess><FieldAccess name="lineInfo"/><IntegerLiteral value="0"/></ArrayAccess></FieldAccess><True/></AssignStatement></xdd:insert><xdd:insert xdd:stid="172" xdd:path="2/0/1/73/1/0_-23"><AssignStatement tid=""><ArrayAccess><FieldAccess name="lineInfo"/><IntegerLiteral value="0"/></ArrayAccess><StandardInstanceCreation name="LineInfo"><ReferenceType name="LineInfo"/><Arguments name="LineInfo"/></StandardInstanceCreation></AssignStatement></xdd:insert><xdd:insert xdd:stid="134" xdd:path="2/0/1/73/1/0_-24"><AssignStatement tid=""><FieldAccess name="lineInfo"/><ArrayCreationDims dims="0"><ReferenceType name="LineInfo"/><DimExpression><IntegerLiteral value="1"/></DimExpression></ArrayCreationDims></AssignStatement></xdd:insert><xdd:insert xdd:stid="177" xdd:path="2/0/1/73/1/0_-25"><AssignStatement tid=""><FieldAccess name="lineCount"/><IntegerLiteral value="1"/></AssignStatement></xdd:insert><xdd:insert xdd:stid="143" xdd:path="2/0/1/64/2/2/1" xdd:boundary="0"><Block tid="" __tid="block"></Block></xdd:insert><xdd:insert xdd:stid="139" xdd:path="2/0/1/64/2/2/1/1/0/1/0_1"><NullLiteral/></xdd:insert><xdd:insert xdd:stid="115" xdd:path="2/0/1/63/3/2/1" xdd:boundary="0"><Block tid="" __tid="block"></Block></xdd:insert><xdd:insert xdd:stid="164" xdd:path="2/0/1/63/3/2/1/1/0/1/0_1"><NullLiteral/></xdd:insert><xdd:insert xdd:stid="104" xdd:path="2/0/1/62/3/6/1" xdd:boundary="0"><Block tid="" __tid="block"></Block></xdd:insert><xdd:insert xdd:stid="183" xdd:path="2/0/1/62/3/6/1/1/0/1/0_1"><NullLiteral/></xdd:insert><xdd:insert xdd:stid="110" xdd:path="2/0/1/62/3/0" xdd:boundary="0_1"><IfStatement tid="7e5a7ea7c35fb078db7dcd226a849c2d" __tid="Expression.UnaryOperator.Not"><Negation><SimpleMethodInvocation name="getFlag"><Arguments name="getFlag"><FieldAccess name="READ_ONLY"/></Arguments></SimpleMethodInvocation></Negation></IfStatement></xdd:insert><xdd:insert xdd:stid="155" xdd:path="2/0/1/59_23"><MethodDeclaration name="getVirtualLineCount" signature="()I"><Modifiers name="getVirtualLineCount#m"><Public/></Modifiers><IntType/><MethodBody name="getVirtualLineCount" signature="()I"><ReturnStatement><FieldAccess name="virtualLineCount"/></ReturnStatement></MethodBody></MethodDeclaration></xdd:insert><xdd:insert xdd:stid="100" xdd:path="2/0/1/59_22"><MethodDeclaration name="getLineCount" signature="()I"><Modifiers name="getLineCount#m"><Public/></Modifiers><IntType/><MethodBody name="getLineCount" signature="()I"><ReturnStatement><FieldAccess name="lineCount"/></ReturnStatement></MethodBody></MethodDeclaration></xdd:insert><xdd:insert xdd:stid="98" xdd:path="2/0/1/59_21"><MethodDeclaration name="removeFoldListener" signature=""><Modifiers name="removeFoldListener#m"><Public/></Modifiers><Void/><Parameters name="removeFoldListener"><Parameter name="l" dims="0" va="false"><ReferenceType name="FoldListener"/></Parameter></Parameters><MethodBody name="removeFoldListener" signature="(LFoldListener;)V"><PrimaryMethodInvocationStatement name="removeElement"><FieldAccess name="foldListeners"/><Arguments name="removeElement"><Name name="l"/></Arguments></PrimaryMethodInvocationStatement></MethodBody></MethodDeclaration></xdd:insert><xdd:insert xdd:stid="131" xdd:path="2/0/1/59_20"><MethodDeclaration name="addFoldListener" signature=""><Modifiers name="addFoldListener#m"><Public/></Modifiers><Void/><Parameters name="addFoldListener"><Parameter name="l" dims="0" va="false"><ReferenceType name="FoldListener"/></Parameter></Parameters><MethodBody name="addFoldListener" signature="(LFoldListener;)V"><PrimaryMethodInvocationStatement name="addElement"><FieldAccess name="foldListeners"/><Arguments name="addElement"><Name name="l"/></Arguments></PrimaryMethodInvocationStatement></MethodBody></MethodDeclaration></xdd:insert><xdd:insert xdd:stid="120" xdd:path="2/0/1/59_19"><MethodDeclaration name="narrow" signature="(II)V"><Modifiers name="narrow#m"><Public/></Modifiers><Void/><Parameters name="narrow"><Parameter name="start" dims="0" va="false"><IntType/></Parameter><Parameter name="end" dims="0" va="false"><IntType/></Parameter></Parameters><MethodBody name="narrow" signature="(II)V"><AssignStatement tid=""><FieldAccess name="virtualLineCount"/><Add><Subt><Name name="end"/><Name name="start"/></Subt><IntegerLiteral value="1"/></Add></AssignStatement><AssignStatement tid=""><FieldAccess name="virtualLines"/><ArrayCreationDims dims="0"><IntType/><DimExpression><FieldAccess name="virtualLineCount"/></DimExpression></ArrayCreationDims></AssignStatement><BasicForStatement><ForInit tid="db4b1e0014366cd465c1c317d455ef82" __tid="LocalVariableDeclaration(false,)"><LocalVariableDeclaration vdids="i[0"><IntType/><VariableDeclarator name="i" dims="0" islocal="true"><IntegerLiteral value="0"/></VariableDeclarator></LocalVariableDeclaration></ForInit><ForCond tid="e26156426dcb48e0989fb42c182d4387" __tid="Expression.BinaryOperator.Lt"><Lt><Name name="i"/><Name name="start"/></Lt></ForCond><ForUpdate tid="bdb8c889613f58d4d93169f9b8008aa4" __tid="Expression.UnaryOperator.PostIncrement"><PostIncrement><Name name="i"/></PostIncrement></ForUpdate><AssignStatement tid=""><FieldAccess name="visible"><ArrayAccess><FieldAccess name="lineInfo"/><Name name="i"/></ArrayAccess></FieldAccess><False/></AssignStatement></BasicForStatement><BasicForStatement><ForInit tid="27b4da74b871fcf2a2711f03908607ff" __tid="LocalVariableDeclaration(false,)"><LocalVariableDeclaration vdids="i[0"><IntType/><VariableDeclarator name="i" dims="0" islocal="true"><Name name="start"/></VariableDeclarator></LocalVariableDeclaration></ForInit><ForCond tid="4a39b2fc0eb969453f78954990c3ba12" __tid="Expression.BinaryOperator.Le"><Le><Name name="i"/><Name name="end"/></Le></ForCond><ForUpdate tid="bdb8c889613f58d4d93169f9b8008aa4" __tid="Expression.UnaryOperator.PostIncrement"><PostIncrement><Name name="i"/></PostIncrement></ForUpdate><Block tid="" __tid="block"><LocalVariableDeclarationStatement vdids="info[0"><ReferenceType name="LineInfo"/><VariableDeclarator name="info" dims="0" islocal="true"><ArrayAccess><FieldAccess name="lineInfo"/><Name name="i"/></ArrayAccess></VariableDeclarator></LocalVariableDeclarationStatement><AssignStatement tid=""><FieldAccess name="visible"><Name name="info"/></FieldAccess><True/></AssignStatement><AssignStatement tid=""><ArrayAccess><FieldAccess name="virtualLines"/><Subt><Name name="i"/><Name name="start"/></Subt></ArrayAccess><Name name="i"/></AssignStatement></Block></BasicForStatement><BasicForStatement><ForInit tid="18d5648dc6c91cdad889df0a9be8883a" __tid="LocalVariableDeclaration(false,)"><LocalVariableDeclaration vdids="i[0"><IntType/><VariableDeclarator name="i" dims="0" islocal="true"><Add><Name name="end"/><IntegerLiteral value="1"/></Add></VariableDeclarator></LocalVariableDeclaration></ForInit><ForCond tid="67655a7cb53fb02a950cfd5aab8ee3c2" __tid="Expression.BinaryOperator.Lt"><Lt><Name name="i"/><FieldAccess name="lineCount"/></Lt></ForCond><ForUpdate tid="bdb8c889613f58d4d93169f9b8008aa4" __tid="Expression.UnaryOperator.PostIncrement"><PostIncrement><Name name="i"/></PostIncrement></ForUpdate><AssignStatement tid=""><FieldAccess name="visible"><ArrayAccess><FieldAccess name="lineInfo"/><Name name="i"/></ArrayAccess></FieldAccess><False/></AssignStatement></BasicForStatement><SimpleMethodInvocationStatement name="fireFoldStructureChanged"><Arguments name="fireFoldStructureChanged"/></SimpleMethodInvocationStatement></MethodBody></MethodDeclaration></xdd:insert><xdd:insert xdd:stid="163" xdd:path="2/0/1/59_18"><MethodDeclaration name="expandAllFolds" signature="()V"><Modifiers name="expandAllFolds#m"><Public/></Modifiers><Void/><MethodBody name="expandAllFolds" signature="()V"><IfStatement tid="143ff5c92c8101a837f30a25855eeca3" __tid="Expression.BinaryOperator.Le"><Le><AmbiguousName name="virtualLines.length"><AmbiguousName name="virtualLines"/></AmbiguousName><FieldAccess name="lineCount"/></Le><Block tid="" __tid="block"><LocalVariableDeclarationStatement vdids="virtualLinesN[0"><IntType dimensions="1"/><VariableDeclarator name="virtualLinesN" dims="0" islocal="true"><ArrayCreationDims dims="0"><IntType/><DimExpression><Mult><ParenthesizedExpression tid="7dfb0a0eb81c0b544919eb4660a0e3bd" __tid="Expression.BinaryOperator.Add"><Add><FieldAccess name="lineCount"/><IntegerLiteral value="1"/></Add></ParenthesizedExpression><IntegerLiteral value="2"/></Mult></DimExpression></ArrayCreationDims></VariableDeclarator></LocalVariableDeclarationStatement><TypeMethodInvocationStatement name="System" ident="arraycopy"><Arguments name="arraycopy"><FieldAccess name="virtualLines"/><IntegerLiteral value="0"/><Name name="virtualLinesN"/><IntegerLiteral value="0"/><AmbiguousName name="virtualLines.length"><AmbiguousName name="virtualLines"/></AmbiguousName></Arguments></TypeMethodInvocationStatement><AssignStatement tid=""><FieldAccess name="virtualLines"/><Name name="virtualLinesN"/></AssignStatement></Block></IfStatement><AssignStatement tid=""><FieldAccess name="virtualLineCount"/><FieldAccess name="lineCount"/></AssignStatement><BasicForStatement><ForInit tid="db4b1e0014366cd465c1c317d455ef82" __tid="LocalVariableDeclaration(false,)"><LocalVariableDeclaration vdids="i[0"><IntType/><VariableDeclarator name="i" dims="0" islocal="true"><IntegerLiteral value="0"/></VariableDeclarator></LocalVariableDeclaration></ForInit><ForCond tid="67655a7cb53fb02a950cfd5aab8ee3c2" __tid="Expression.BinaryOperator.Lt"><Lt><Name name="i"/><FieldAccess name="lineCount"/></Lt></ForCond><ForUpdate tid="bdb8c889613f58d4d93169f9b8008aa4" __tid="Expression.UnaryOperator.PostIncrement"><PostIncrement><Name name="i"/></PostIncrement></ForUpdate><Block tid="" __tid="block"><AssignStatement tid=""><ArrayAccess><FieldAccess name="virtualLines"/><Name name="i"/></ArrayAccess><Name name="i"/></AssignStatement><AssignStatement tid=""><FieldAccess name="visible"><ArrayAccess><FieldAccess name="lineInfo"/><Name name="i"/></ArrayAccess></FieldAccess><True/></AssignStatement></Block></BasicForStatement><SimpleMethodInvocationStatement name="fireFoldStructureChanged"><Arguments name="fireFoldStructureChanged"/></SimpleMethodInvocationStatement></MethodBody></MethodDeclaration></xdd:insert><xdd:insert xdd:stid="178" xdd:path="2/0/1/59_17"><MethodDeclaration name="expandFolds" signature="(I)V"><Modifiers name="expandFolds#m"><Public/></Modifiers><Void/><Parameters name="expandFolds"><Parameter name="level" dims="0" va="false"><IntType/></Parameter></Parameters><MethodBody name="expandFolds" signature="(I)V"><IfStatement tid="143ff5c92c8101a837f30a25855eeca3" __tid="Expression.BinaryOperator.Le"><Le><AmbiguousName name="virtualLines.length"><AmbiguousName name="virtualLines"/></AmbiguousName><FieldAccess name="lineCount"/></Le><Block tid="" __tid="block"><LocalVariableDeclarationStatement vdids="virtualLinesN[0"><IntType dimensions="1"/><VariableDeclarator name="virtualLinesN" dims="0" islocal="true"><ArrayCreationDims dims="0"><IntType/><DimExpression><Mult><ParenthesizedExpression tid="7dfb0a0eb81c0b544919eb4660a0e3bd" __tid="Expression.BinaryOperator.Add"><Add><FieldAccess name="lineCount"/><IntegerLiteral value="1"/></Add></ParenthesizedExpression><IntegerLiteral value="2"/></Mult></DimExpression></ArrayCreationDims></VariableDeclarator></LocalVariableDeclarationStatement><TypeMethodInvocationStatement name="System" ident="arraycopy"><Arguments name="arraycopy"><FieldAccess name="virtualLines"/><IntegerLiteral value="0"/><Name name="virtualLinesN"/><IntegerLiteral value="0"/><AmbiguousName name="virtualLines.length"><AmbiguousName name="virtualLines"/></AmbiguousName></Arguments></TypeMethodInvocationStatement><AssignStatement tid=""><FieldAccess name="virtualLines"/><Name name="virtualLinesN"/></AssignStatement></Block></IfStatement><AssignStatement tid=""><Name name="level"/><Add><Mult><ParenthesizedExpression tid="7bcf2798c45918b6f67596f2d5447958" __tid="Expression.BinaryOperator.Sub"><Subt><Name name="level"/><IntegerLiteral value="1"/></Subt></ParenthesizedExpression><SimpleMethodInvocation name="getIndentSize"><Arguments name="getIndentSize"/></SimpleMethodInvocation></Mult><IntegerLiteral value="1"/></Add></AssignStatement><AssignStatement tid=""><FieldAccess name="virtualLineCount"/><IntegerLiteral value="0"/></AssignStatement><BasicForStatement><ForInit tid="db4b1e0014366cd465c1c317d455ef82" __tid="LocalVariableDeclaration(false,)"><LocalVariableDeclaration vdids="i[0"><IntType/><VariableDeclarator name="i" dims="0" islocal="true"><IntegerLiteral value="0"/></VariableDeclarator></LocalVariableDeclaration></ForInit><ForCond tid="67655a7cb53fb02a950cfd5aab8ee3c2" __tid="Expression.BinaryOperator.Lt"><Lt><Name name="i"/><FieldAccess name="lineCount"/></Lt></ForCond><ForUpdate tid="bdb8c889613f58d4d93169f9b8008aa4" __tid="Expression.UnaryOperator.PostIncrement"><PostIncrement><Name name="i"/></PostIncrement></ForUpdate><Block tid="" __tid="block"><IfStatement tid="216b1f46f13a1aa3cae4ec6a02b25d8c" __tid="Expression.BinaryOperator.Lt"><Lt><SimpleMethodInvocation name="getFoldLevel"><Arguments name="getFoldLevel"><Name name="i"/></Arguments></SimpleMethodInvocation><Name name="level"/></Lt><Block tid="" __tid="block"><AssignStatement tid=""><FieldAccess name="visible"><ArrayAccess><FieldAccess name="lineInfo"/><Name name="i"/></ArrayAccess></FieldAccess><True/></AssignStatement><AssignStatement tid=""><ArrayAccess><FieldAccess name="virtualLines"/><PostIncrement><FieldAccess name="virtualLineCount"/></PostIncrement></ArrayAccess><Name name="i"/></AssignStatement></Block><AssignStatement tid=""><FieldAccess name="visible"><ArrayAccess><FieldAccess name="lineInfo"/><Name name="i"/></ArrayAccess></FieldAccess><False/></AssignStatement></IfStatement></Block></BasicForStatement><SimpleMethodInvocationStatement name="fireFoldStructureChanged"><Arguments name="fireFoldStructureChanged"/></SimpleMethodInvocationStatement></MethodBody></MethodDeclaration></xdd:insert><xdd:insert xdd:stid="168" xdd:path="2/0/1/59_16"><MethodDeclaration name="expandFolds" signature="(C)V"><Modifiers name="expandFolds#m"><Public/></Modifiers><Void/><Parameters name="expandFolds"><Parameter name="digit" dims="0" va="false"><CharType/></Parameter></Parameters><MethodBody name="expandFolds" signature="(C)V"><IfStatement tid="3a225252854a7f3fbab76863fdd8334b" __tid="Expression.BinaryOperator.Or"><Or><Lt><Name name="digit"/><CharacterLiteral value="1"/></Lt><Gt><Name name="digit"/><CharacterLiteral value="9"/></Gt></Or><Block tid="" __tid="block"><PrimaryMethodInvocationStatement name="beep"><TypeMethodInvocation name="Toolkit" ident="getDefaultToolkit"><Arguments name="getDefaultToolkit"/></TypeMethodInvocation><Arguments name="beep"/></PrimaryMethodInvocationStatement><ReturnStatement/></Block><SimpleMethodInvocationStatement name="expandFolds"><Arguments name="expandFolds"><Add><Cast><IntType/><ParenthesizedExpression tid="6aa16687a06bf9bfff5fc1fe4a4aed10" __tid="Expression.BinaryOperator.Sub"><Subt><Name name="digit"/><CharacterLiteral value="1"/></Subt></ParenthesizedExpression></Cast><IntegerLiteral value="1"/></Add></Arguments></SimpleMethodInvocationStatement></IfStatement></MethodBody></MethodDeclaration></xdd:insert><xdd:insert xdd:stid="96" xdd:path="2/0/1/59_15"><MethodDeclaration name="expandFoldAt" signature="(IZ)Z"><Modifiers name="expandFoldAt#m"><Public/></Modifiers><BooleanType/><Parameters name="expandFoldAt"><Parameter name="line" dims="0" va="false"><IntType/></Parameter><Parameter name="fully" dims="0" va="false"><BooleanType/></Parameter></Parameters><MethodBody name="expandFoldAt" signature="(IZ)Z"><LocalVariableDeclarationStatement vdids="initialFoldLevel[0"><IntType/><VariableDeclarator name="initialFoldLevel" dims="0" islocal="true"><SimpleMethodInvocation name="getFoldLevel"><Arguments name="getFoldLevel"><Name name="line"/></Arguments></SimpleMethodInvocation></VariableDeclarator></LocalVariableDeclarationStatement><LocalVariableDeclarationStatement vdids="start[0"><IntType/><VariableDeclarator name="start" dims="0" islocal="true"><IntegerLiteral value="0"/></VariableDeclarator></LocalVariableDeclarationStatement><LocalVariableDeclarationStatement vdids="end[0"><IntType/><VariableDeclarator name="end" dims="0" islocal="true"><Subt><FieldAccess name="lineCount"/><IntegerLiteral value="1"/></Subt></VariableDeclarator></LocalVariableDeclarationStatement><IfStatement tid="95c3c805f8392d8d6d1ba8593c32d666" __tid="Expression.BinaryOperator.And"><And><And><And><NotEq><Name name="line"/><Subt><FieldAccess name="lineCount"/><IntegerLiteral value="1"/></Subt></NotEq><FieldAccess name="visible"><ArrayAccess><FieldAccess name="lineInfo"/><Name name="line"/></ArrayAccess></FieldAccess></And><Negation><FieldAccess name="visible"><ArrayAccess><FieldAccess name="lineInfo"/><Add><Name name="line"/><IntegerLiteral value="1"/></Add></ArrayAccess></FieldAccess></Negation></And><Gt><SimpleMethodInvocation name="getFoldLevel"><Arguments name="getFoldLevel"><Add><Name name="line"/><IntegerLiteral value="1"/></Add></Arguments></SimpleMethodInvocation><Name name="initialFoldLevel"/></Gt></And><Block tid="" __tid="block"><AssignStatement tid=""><Name name="start"/><Add><Name name="line"/><IntegerLiteral value="1"/></Add></AssignStatement><BasicForStatement><ForInit tid="f07f02c7865cc3fee5ae846adc6ad92d" __tid="LocalVariableDeclaration(false,)"><LocalVariableDeclaration vdids="i[0"><IntType/><VariableDeclarator name="i" dims="0" islocal="true"><Add><Name name="line"/><IntegerLiteral value="1"/></Add></VariableDeclarator></LocalVariableDeclaration></ForInit><ForCond tid="67655a7cb53fb02a950cfd5aab8ee3c2" __tid="Expression.BinaryOperator.Lt"><Lt><Name name="i"/><FieldAccess name="lineCount"/></Lt></ForCond><ForUpdate tid="bdb8c889613f58d4d93169f9b8008aa4" __tid="Expression.UnaryOperator.PostIncrement"><PostIncrement><Name name="i"/></PostIncrement></ForUpdate><Block tid="" __tid="block"><IfStatement tid="10e883ee30d0dbb3472490c624f5abce" __tid="Expression.BinaryOperator.And"><And><FieldAccess name="visible"><ArrayAccess><FieldAccess name="lineInfo"/><Name name="i"/></ArrayAccess></FieldAccess><Le><SimpleMethodInvocation name="getFoldLevel"><Arguments name="getFoldLevel"><Name name="i"/></Arguments></SimpleMethodInvocation><Name name="initialFoldLevel"/></Le></And><Block tid="" __tid="block"><AssignStatement tid=""><Name name="end"/><Subt><Name name="i"/><IntegerLiteral value="1"/></Subt></AssignStatement><BreakStatement/></Block></IfStatement></Block></BasicForStatement></Block><Block tid="" __tid="block"><LocalVariableDeclarationStatement vdids="ok[0"><BooleanType/><VariableDeclarator name="ok" dims="0" islocal="true"><False/></VariableDeclarator></LocalVariableDeclarationStatement><BasicForStatement><ForInit tid="f7725674fbcd2a3e0aae6e7bdf0d5371" __tid="LocalVariableDeclaration(false,)"><LocalVariableDeclaration vdids="i[0"><IntType/><VariableDeclarator name="i" dims="0" islocal="true"><Subt><Name name="line"/><IntegerLiteral value="1"/></Subt></VariableDeclarator></LocalVariableDeclaration></ForInit><ForCond tid="a18b1f5f57899b36b57baac55621cd2c" __tid="Expression.BinaryOperator.Ge"><Ge><Name name="i"/><IntegerLiteral value="0"/></Ge></ForCond><ForUpdate tid="a49736fcbf2575827b889156d7ff96f5" __tid="Expression.UnaryOperator.PostDecrement"><PostDecrement><Name name="i"/></PostDecrement></ForUpdate><Block tid="" __tid="block"><IfStatement tid="06f837cc091f53246d0f87792d23fbc7" __tid="Expression.BinaryOperator.And"><And><FieldAccess name="visible"><ArrayAccess><FieldAccess name="lineInfo"/><Name name="i"/></ArrayAccess></FieldAccess><Lt><SimpleMethodInvocation name="getFoldLevel"><Arguments name="getFoldLevel"><Name name="i"/></Arguments></SimpleMethodInvocation><Name name="initialFoldLevel"/></Lt></And><Block tid="" __tid="block"><AssignStatement tid=""><Name name="start"/><Add><Name name="i"/><IntegerLiteral value="1"/></Add></AssignStatement><AssignStatement tid=""><Name name="ok"/><True/></AssignStatement><BreakStatement/></Block></IfStatement></Block></BasicForStatement><IfStatement tid="ad087a029d653837609e4dc3f89a2194" __tid="Expression.UnaryOperator.Not"><Negation><Name name="ok"/></Negation><Block tid="" __tid="block"><ReturnStatement><False/></ReturnStatement></Block></IfStatement><BasicForStatement><ForInit tid="f07f02c7865cc3fee5ae846adc6ad92d" __tid="LocalVariableDeclaration(false,)"><LocalVariableDeclaration vdids="i[0"><IntType/><VariableDeclarator name="i" dims="0" islocal="true"><Add><Name name="line"/><IntegerLiteral value="1"/></Add></VariableDeclarator></LocalVariableDeclaration></ForInit><ForCond tid="67655a7cb53fb02a950cfd5aab8ee3c2" __tid="Expression.BinaryOperator.Lt"><Lt><Name name="i"/><FieldAccess name="lineCount"/></Lt></ForCond><ForUpdate tid="bdb8c889613f58d4d93169f9b8008aa4" __tid="Expression.UnaryOperator.PostIncrement"><PostIncrement><Name name="i"/></PostIncrement></ForUpdate><Block tid="" __tid="block"><IfStatement tid="06f837cc091f53246d0f87792d23fbc7" __tid="Expression.BinaryOperator.And"><And><FieldAccess name="visible"><ArrayAccess><FieldAccess name="lineInfo"/><Name name="i"/></ArrayAccess></FieldAccess><Lt><SimpleMethodInvocation name="getFoldLevel"><Arguments name="getFoldLevel"><Name name="i"/></Arguments></SimpleMethodInvocation><Name name="initialFoldLevel"/></Lt></And><Block tid="" __tid="block"><AssignStatement tid=""><Name name="end"/><Subt><Name name="i"/><IntegerLiteral value="1"/></Subt></AssignStatement><BreakStatement/></Block></IfStatement></Block></BasicForStatement></Block></IfStatement><LocalVariableDeclarationStatement vdids="delta[0"><IntType/><VariableDeclarator name="delta" dims="0" islocal="true"><IntegerLiteral value="0"/></VariableDeclarator></LocalVariableDeclarationStatement><LocalVariableDeclarationStatement vdids="tmpMapLen[0"><IntType/><VariableDeclarator name="tmpMapLen" dims="0" islocal="true"><IntegerLiteral value="0"/></VariableDeclarator></LocalVariableDeclarationStatement><LocalVariableDeclarationStatement vdids="tmpVirtualMap[0"><IntType dimensions="1"/><VariableDeclarator name="tmpVirtualMap" dims="0" islocal="true"><ArrayCreationDims dims="0"><IntType/><DimExpression><Add><Subt><Name name="end"/><Name name="start"/></Subt><IntegerLiteral value="1"/></Add></DimExpression></ArrayCreationDims></VariableDeclarator></LocalVariableDeclarationStatement><AssignStatement tid=""><Name name="initialFoldLevel"/><SimpleMethodInvocation name="getFoldLevel"><Arguments name="getFoldLevel"><Name name="start"/></Arguments></SimpleMethodInvocation></AssignStatement><BasicForStatement><ForInit tid="27b4da74b871fcf2a2711f03908607ff" __tid="LocalVariableDeclaration(false,)"><LocalVariableDeclaration vdids="i[0"><IntType/><VariableDeclarator name="i" dims="0" islocal="true"><Name name="start"/></VariableDeclarator></LocalVariableDeclaration></ForInit><ForCond tid="4a39b2fc0eb969453f78954990c3ba12" __tid="Expression.BinaryOperator.Le"><Le><Name name="i"/><Name name="end"/></Le></ForCond><ForUpdate tid="bdb8c889613f58d4d93169f9b8008aa4" __tid="Expression.UnaryOperator.PostIncrement"><PostIncrement><Name name="i"/></PostIncrement></ForUpdate><Block tid="" __tid="block"><LocalVariableDeclarationStatement vdids="info[0"><ReferenceType name="LineInfo"/><VariableDeclarator name="info" dims="0" islocal="true"><ArrayAccess><FieldAccess name="lineInfo"/><Name name="i"/></ArrayAccess></VariableDeclarator></LocalVariableDeclarationStatement><IfStatement tid="c83c10f25553a33a44fbfc3545e37bfc" __tid="Primary.FieldAccess()"><FieldAccess name="visible"><Name name="info"/></FieldAccess><Block tid="" __tid="block"><AssignStatement tid=""><ArrayAccess><Name name="tmpVirtualMap"/><PostIncrement><Name name="tmpMapLen"/></PostIncrement></ArrayAccess><Name name="i"/></AssignStatement></Block><IfStatement tid="6fb7da6b1c17089f0488552ae2c0a59f" __tid="Expression.BinaryOperator.And"><And><Negation><Name name="fully"/></Negation><Gt><SimpleMethodInvocation name="getFoldLevel"><Arguments name="getFoldLevel"><Name name="i"/></Arguments></SimpleMethodInvocation><Name name="initialFoldLevel"/></Gt></And><Block tid="" __tid="block"/><Block tid="" __tid="block"><AssignStatement tid=""><ArrayAccess><Name name="tmpVirtualMap"/><PostIncrement><Name name="tmpMapLen"/></PostIncrement></ArrayAccess><Name name="i"/></AssignStatement><PostIncrementStatement><Name name="delta"/></PostIncrementStatement><AssignStatement tid=""><FieldAccess name="visible"><Name name="info"/></FieldAccess><True/></AssignStatement></Block></IfStatement></IfStatement></Block></BasicForStatement><LocalVariableDeclarationStatement vdids="virtualLine[0"><IntType/><VariableDeclarator name="virtualLine" dims="0" islocal="true"/></LocalVariableDeclarationStatement><IfStatement tid="120430d54107e01920e9babeea50c9f7" __tid="Expression.BinaryOperator.Gt"><Gt><Name name="start"/><ArrayAccess><FieldAccess name="virtualLines"/><Subt><FieldAccess name="virtualLineCount"/><IntegerLiteral value="1"/></Subt></ArrayAccess></Gt><AssignStatement tid=""><Name name="virtualLine"/><FieldAccess name="virtualLineCount"/></AssignStatement><AssignStatement tid=""><Name name="virtualLine"/><SimpleMethodInvocation name="physicalToVirtual"><Arguments name="physicalToVirtual"><Name name="start"/></Arguments></SimpleMethodInvocation></AssignStatement></IfStatement><AddAssignStatement tid=""><FieldAccess name="virtualLineCount"/><Name name="delta"/></AddAssignStatement><IfStatement tid="5ba50bd8ea208922adb81e3a934bedab" __tid="Expression.BinaryOperator.Le"><Le><AmbiguousName name="virtualLines.length"><AmbiguousName name="virtualLines"/></AmbiguousName><FieldAccess name="virtualLineCount"/></Le><Block tid="" __tid="block"><LocalVariableDeclarationStatement vdids="virtualLinesN[0"><IntType dimensions="1"/><VariableDeclarator name="virtualLinesN" dims="0" islocal="true"><ArrayCreationDims dims="0"><IntType/><DimExpression><Mult><ParenthesizedExpression tid="9559eceddbd8ebadb6ad815ec79884b5" __tid="Expression.BinaryOperator.Add"><Add><FieldAccess name="virtualLineCount"/><IntegerLiteral value="1"/></Add></ParenthesizedExpression><IntegerLiteral value="2"/></Mult></DimExpression></ArrayCreationDims></VariableDeclarator></LocalVariableDeclarationStatement><TypeMethodInvocationStatement name="System" ident="arraycopy"><Arguments name="arraycopy"><FieldAccess name="virtualLines"/><IntegerLiteral value="0"/><Name name="virtualLinesN"/><IntegerLiteral value="0"/><AmbiguousName name="virtualLines.length"><AmbiguousName name="virtualLines"/></AmbiguousName></Arguments></TypeMethodInvocationStatement><AssignStatement tid=""><FieldAccess name="virtualLines"/><Name name="virtualLinesN"/></AssignStatement></Block></IfStatement><TypeMethodInvocationStatement name="System" ident="arraycopy"><Arguments name="arraycopy"><FieldAccess name="virtualLines"/><Name name="virtualLine"/><FieldAccess name="virtualLines"/><Add><Name name="virtualLine"/><Name name="delta"/></Add><Subt><Subt><AmbiguousName name="virtualLines.length"><AmbiguousName name="virtualLines"/></AmbiguousName><Name name="virtualLine"/></Subt><Name name="delta"/></Subt></Arguments></TypeMethodInvocationStatement><BasicForStatement><ForInit tid="b922d9f260ddd25e63285b29e873fbc8" __tid="LocalVariableDeclaration(false,)"><LocalVariableDeclaration vdids="j[0"><IntType/><VariableDeclarator name="j" dims="0" islocal="true"><IntegerLiteral value="0"/></VariableDeclarator></LocalVariableDeclaration></ForInit><ForCond tid="841deab6166f692989d1a4cea07975de" __tid="Expression.BinaryOperator.Lt"><Lt><Name name="j"/><Name name="tmpMapLen"/></Lt></ForCond><ForUpdate tid="3ad48e87d688f13c6846d972d3a3a6ee" __tid="Expression.UnaryOperator.PostIncrement"><PostIncrement><Name name="j"/></PostIncrement></ForUpdate><Block tid="" __tid="block"><AssignStatement tid=""><ArrayAccess><FieldAccess name="virtualLines"/><Add><Name name="virtualLine"/><Name name="j"/></Add></ArrayAccess><ArrayAccess><Name name="tmpVirtualMap"/><Name name="j"/></ArrayAccess></AssignStatement></Block></BasicForStatement><SimpleMethodInvocationStatement name="fireFoldStructureChanged"><Arguments name="fireFoldStructureChanged"/></SimpleMethodInvocationStatement><ReturnStatement><True/></ReturnStatement></MethodBody></MethodDeclaration></xdd:insert><xdd:insert xdd:stid="182" xdd:path="2/0/1/59_14"><MethodDeclaration name="collapseFoldAt" signature="(I)Z"><Modifiers name="collapseFoldAt#m"><Public/></Modifiers><BooleanType/><Parameters name="collapseFoldAt"><Parameter name="line" dims="0" va="false"><IntType/></Parameter></Parameters><MethodBody name="collapseFoldAt" signature="(I)Z"><LocalVariableDeclarationStatement vdids="initialFoldLevel[0"><IntType/><VariableDeclarator name="initialFoldLevel" dims="0" islocal="true"><SimpleMethodInvocation name="getFoldLevel"><Arguments name="getFoldLevel"><Name name="line"/></Arguments></SimpleMethodInvocation></VariableDeclarator></LocalVariableDeclarationStatement><LocalVariableDeclarationStatement vdids="start[0"><IntType/><VariableDeclarator name="start" dims="0" islocal="true"><IntegerLiteral value="0"/></VariableDeclarator></LocalVariableDeclarationStatement><LocalVariableDeclarationStatement vdids="end[0"><IntType/><VariableDeclarator name="end" dims="0" islocal="true"><Subt><FieldAccess name="lineCount"/><IntegerLiteral value="1"/></Subt></VariableDeclarator></LocalVariableDeclarationStatement><IfStatement tid="726d7326ed8bad5a33bf18ba925a8fdf" __tid="Expression.BinaryOperator.And"><And><NotEq><Name name="line"/><Subt><FieldAccess name="lineCount"/><IntegerLiteral value="1"/></Subt></NotEq><Gt><SimpleMethodInvocation name="getFoldLevel"><Arguments name="getFoldLevel"><Add><Name name="line"/><IntegerLiteral value="1"/></Add></Arguments></SimpleMethodInvocation><Name name="initialFoldLevel"/></Gt></And><Block tid="" __tid="block"><AssignStatement tid=""><Name name="start"/><Add><Name name="line"/><IntegerLiteral value="1"/></Add></AssignStatement><BasicForStatement><ForInit tid="f07f02c7865cc3fee5ae846adc6ad92d" __tid="LocalVariableDeclaration(false,)"><LocalVariableDeclaration vdids="i[0"><IntType/><VariableDeclarator name="i" dims="0" islocal="true"><Add><Name name="line"/><IntegerLiteral value="1"/></Add></VariableDeclarator></LocalVariableDeclaration></ForInit><ForCond tid="67655a7cb53fb02a950cfd5aab8ee3c2" __tid="Expression.BinaryOperator.Lt"><Lt><Name name="i"/><FieldAccess name="lineCount"/></Lt></ForCond><ForUpdate tid="bdb8c889613f58d4d93169f9b8008aa4" __tid="Expression.UnaryOperator.PostIncrement"><PostIncrement><Name name="i"/></PostIncrement></ForUpdate><Block tid="" __tid="block"><IfStatement tid="ea21d5ec19b4b2e9c76115a7e51de0bc" __tid="Expression.BinaryOperator.Le"><Le><SimpleMethodInvocation name="getFoldLevel"><Arguments name="getFoldLevel"><Name name="i"/></Arguments></SimpleMethodInvocation><Name name="initialFoldLevel"/></Le><Block tid="" __tid="block"><AssignStatement tid=""><Name name="end"/><Subt><Name name="i"/><IntegerLiteral value="1"/></Subt></AssignStatement><BreakStatement/></Block></IfStatement></Block></BasicForStatement></Block><Block tid="" __tid="block"><LocalVariableDeclarationStatement vdids="ok[0"><BooleanType/><VariableDeclarator name="ok" dims="0" islocal="true"><False/></VariableDeclarator></LocalVariableDeclarationStatement><BasicForStatement><ForInit tid="f7725674fbcd2a3e0aae6e7bdf0d5371" __tid="LocalVariableDeclaration(false,)"><LocalVariableDeclaration vdids="i[0"><IntType/><VariableDeclarator name="i" dims="0" islocal="true"><Subt><Name name="line"/><IntegerLiteral value="1"/></Subt></VariableDeclarator></LocalVariableDeclaration></ForInit><ForCond tid="a18b1f5f57899b36b57baac55621cd2c" __tid="Expression.BinaryOperator.Ge"><Ge><Name name="i"/><IntegerLiteral value="0"/></Ge></ForCond><ForUpdate tid="a49736fcbf2575827b889156d7ff96f5" __tid="Expression.UnaryOperator.PostDecrement"><PostDecrement><Name name="i"/></PostDecrement></ForUpdate><Block tid="" __tid="block"><IfStatement tid="13aec510aa5af58800493f686e99f06e" __tid="Expression.BinaryOperator.Lt"><Lt><SimpleMethodInvocation name="getFoldLevel"><Arguments name="getFoldLevel"><Name name="i"/></Arguments></SimpleMethodInvocation><Name name="initialFoldLevel"/></Lt><Block tid="" __tid="block"><AssignStatement tid=""><Name name="start"/><Add><Name name="i"/><IntegerLiteral value="1"/></Add></AssignStatement><AssignStatement tid=""><Name name="ok"/><True/></AssignStatement><BreakStatement/></Block></IfStatement></Block></BasicForStatement><IfStatement tid="ad087a029d653837609e4dc3f89a2194" __tid="Expression.UnaryOperator.Not"><Negation><Name name="ok"/></Negation><Block tid="" __tid="block"><ReturnStatement><False/></ReturnStatement></Block></IfStatement><BasicForStatement><ForInit tid="f07f02c7865cc3fee5ae846adc6ad92d" __tid="LocalVariableDeclaration(false,)"><LocalVariableDeclaration vdids="i[0"><IntType/><VariableDeclarator name="i" dims="0" islocal="true"><Add><Name name="line"/><IntegerLiteral value="1"/></Add></VariableDeclarator></LocalVariableDeclaration></ForInit><ForCond tid="67655a7cb53fb02a950cfd5aab8ee3c2" __tid="Expression.BinaryOperator.Lt"><Lt><Name name="i"/><FieldAccess name="lineCount"/></Lt></ForCond><ForUpdate tid="bdb8c889613f58d4d93169f9b8008aa4" __tid="Expression.UnaryOperator.PostIncrement"><PostIncrement><Name name="i"/></PostIncrement></ForUpdate><Block tid="" __tid="block"><IfStatement tid="13aec510aa5af58800493f686e99f06e" __tid="Expression.BinaryOperator.Lt"><Lt><SimpleMethodInvocation name="getFoldLevel"><Arguments name="getFoldLevel"><Name name="i"/></Arguments></SimpleMethodInvocation><Name name="initialFoldLevel"/></Lt><Block tid="" __tid="block"><AssignStatement tid=""><Name name="end"/><Subt><Name name="i"/><IntegerLiteral value="1"/></Subt></AssignStatement><BreakStatement/></Block></IfStatement></Block></BasicForStatement></Block></IfStatement><LocalVariableDeclarationStatement vdids="delta[0"><IntType/><VariableDeclarator name="delta" dims="0" islocal="true"><ParenthesizedExpression tid="015681b84ad0aeb9a581f7b30609b6f1" __tid="Expression.BinaryOperator.Add"><Add><Subt><Name name="end"/><Name name="start"/></Subt><IntegerLiteral value="1"/></Add></ParenthesizedExpression></VariableDeclarator></LocalVariableDeclarationStatement><BasicForStatement><ForInit tid="27b4da74b871fcf2a2711f03908607ff" __tid="LocalVariableDeclaration(false,)"><LocalVariableDeclaration vdids="i[0"><IntType/><VariableDeclarator name="i" dims="0" islocal="true"><Name name="start"/></VariableDeclarator></LocalVariableDeclaration></ForInit><ForCond tid="4a39b2fc0eb969453f78954990c3ba12" __tid="Expression.BinaryOperator.Le"><Le><Name name="i"/><Name name="end"/></Le></ForCond><ForUpdate tid="bdb8c889613f58d4d93169f9b8008aa4" __tid="Expression.UnaryOperator.PostIncrement"><PostIncrement><Name name="i"/></PostIncrement></ForUpdate><Block tid="" __tid="block"><LocalVariableDeclarationStatement vdids="info[0"><ReferenceType name="LineInfo"/><VariableDeclarator name="info" dims="0" islocal="true"><ArrayAccess><FieldAccess name="lineInfo"/><Name name="i"/></ArrayAccess></VariableDeclarator></LocalVariableDeclarationStatement><IfStatement tid="c83c10f25553a33a44fbfc3545e37bfc" __tid="Primary.FieldAccess()"><FieldAccess name="visible"><Name name="info"/></FieldAccess><AssignStatement tid=""><FieldAccess name="visible"><Name name="info"/></FieldAccess><False/></AssignStatement><PostDecrementStatement><Name name="delta"/></PostDecrementStatement></IfStatement></Block></BasicForStatement><IfStatement tid="31e683c5329b3ee11e556a4c47613172" __tid="Expression.BinaryOperator.Eq"><Eq><Name name="delta"/><IntegerLiteral value="0"/></Eq><Block tid="" __tid="block"><ReturnStatement><False/></ReturnStatement></Block></IfStatement><AssignStatement tid=""><Name name="start"/><SimpleMethodInvocation name="physicalToVirtual"><Arguments name="physicalToVirtual"><Name name="start"/></Arguments></SimpleMethodInvocation></AssignStatement><SubtAssignStatement tid=""><FieldAccess name="virtualLineCount"/><Name name="delta"/></SubtAssignStatement><TypeMethodInvocationStatement name="System" ident="arraycopy"><Arguments name="arraycopy"><FieldAccess name="virtualLines"/><Add><Name name="start"/><Name name="delta"/></Add><FieldAccess name="virtualLines"/><Name name="start"/><Subt><Subt><AmbiguousName name="virtualLines.length"><AmbiguousName name="virtualLines"/></AmbiguousName><Name name="start"/></Subt><Name name="delta"/></Subt></Arguments></TypeMethodInvocationStatement><SimpleMethodInvocationStatement name="fireFoldStructureChanged"><Arguments name="fireFoldStructureChanged"/></SimpleMethodInvocationStatement><ReturnStatement><True/></ReturnStatement></MethodBody></MethodDeclaration></xdd:insert><xdd:insert xdd:stid="136" xdd:path="2/0/1/59_13"><MethodDeclaration name="physicalToVirtual" signature="(I)I"><Modifiers name="physicalToVirtual#m"><Public/></Modifiers><IntType/><Parameters name="physicalToVirtual"><Parameter name="lineNo" dims="0" va="false"><IntType/></Parameter></Parameters><MethodBody name="physicalToVirtual" signature="(I)I"><LocalVariableDeclarationStatement vdids="start[0"><IntType/><VariableDeclarator name="start" dims="0" islocal="true"><IntegerLiteral value="0"/></VariableDeclarator></LocalVariableDeclarationStatement><LocalVariableDeclarationStatement vdids="end[0"><IntType/><VariableDeclarator name="end" dims="0" islocal="true"><Subt><FieldAccess name="virtualLineCount"/><IntegerLiteral value="1"/></Subt></VariableDeclarator></LocalVariableDeclarationStatement><IfStatement tid="fbadbc4bfa4673e11e6b055ac8dbc1fd" __tid="Expression.BinaryOperator.Lt"><Lt><Name name="lineNo"/><ArrayAccess><FieldAccess name="virtualLines"/><Name name="start"/></ArrayAccess></Lt><ReturnStatement><Name name="start"/></ReturnStatement><IfStatement tid="d09c8966f82fa83a6e0a37d85f6079ed" __tid="Expression.BinaryOperator.Gt"><Gt><Name name="lineNo"/><ArrayAccess><FieldAccess name="virtualLines"/><Name name="end"/></ArrayAccess></Gt><ReturnStatement><Name name="end"/></ReturnStatement></IfStatement></IfStatement><BasicForStatement><Block tid="" __tid="block"><SwitchStatement><Subt><Name name="end"/><Name name="start"/></Subt><SwitchBlock><SwitchBlockStatementGroup><ConstantLabel><IntegerLiteral value="0"/></ConstantLabel><IfStatement tid="026c722e777e25b3c9905e0623317140" __tid="Expression.BinaryOperator.Lt"><Lt><ArrayAccess><FieldAccess name="virtualLines"/><Name name="start"/></ArrayAccess><Name name="lineNo"/></Lt><ReturnStatement><Add><Name name="start"/><IntegerLiteral value="1"/></Add></ReturnStatement><ReturnStatement><Name name="start"/></ReturnStatement></IfStatement></SwitchBlockStatementGroup><SwitchBlockStatementGroup><ConstantLabel><IntegerLiteral value="1"/></ConstantLabel><IfStatement tid="026c722e777e25b3c9905e0623317140" __tid="Expression.BinaryOperator.Lt"><Lt><ArrayAccess><FieldAccess name="virtualLines"/><Name name="start"/></ArrayAccess><Name name="lineNo"/></Lt><Block tid="" __tid="block"><IfStatement tid="c2899d8bc97bf98471e47f8d3478288b" __tid="Expression.BinaryOperator.Lt"><Lt><ArrayAccess><FieldAccess name="virtualLines"/><Name name="end"/></ArrayAccess><Name name="lineNo"/></Lt><ReturnStatement><Add><Name name="end"/><IntegerLiteral value="1"/></Add></ReturnStatement><ReturnStatement><Name name="end"/></ReturnStatement></IfStatement></Block><ReturnStatement><Name name="start"/></ReturnStatement></IfStatement></SwitchBlockStatementGroup><SwitchBlockStatementGroup><DefaultLabel/><LocalVariableDeclarationStatement vdids="pivot[0"><IntType/><VariableDeclarator name="pivot" dims="0" islocal="true"><Add><Name name="start"/><Div><ParenthesizedExpression tid="e3a8510f6c52991d7e5ae5708a2991bf" __tid="Expression.BinaryOperator.Sub"><Subt><Name name="end"/><Name name="start"/></Subt></ParenthesizedExpression><IntegerLiteral value="2"/></Div></Add></VariableDeclarator></LocalVariableDeclarationStatement><LocalVariableDeclarationStatement vdids="value[0"><IntType/><VariableDeclarator name="value" dims="0" islocal="true"><ArrayAccess><FieldAccess name="virtualLines"/><Name name="pivot"/></ArrayAccess></VariableDeclarator></LocalVariableDeclarationStatement><IfStatement tid="d4d5c3f1ee01f4fab5a09997c9c1504b" __tid="Expression.BinaryOperator.Eq"><Eq><Name name="value"/><Name name="lineNo"/></Eq><ReturnStatement><Name name="pivot"/></ReturnStatement><IfStatement tid="c6c0528457151cdb5d910d46698bb3a3" __tid="Expression.BinaryOperator.Lt"><Lt><Name name="value"/><Name name="lineNo"/></Lt><AssignStatement tid=""><Name name="start"/><Add><Name name="pivot"/><IntegerLiteral value="1"/></Add></AssignStatement><AssignStatement tid=""><Name name="end"/><Subt><Name name="pivot"/><IntegerLiteral value="1"/></Subt></AssignStatement></IfStatement></IfStatement><BreakStatement/></SwitchBlockStatementGroup></SwitchBlock></SwitchStatement></Block></BasicForStatement></MethodBody></MethodDeclaration></xdd:insert><xdd:insert xdd:stid="112" xdd:path="2/0/1/59_12"><MethodDeclaration name="virtualToPhysical" signature="(I)I"><Modifiers name="virtualToPhysical#m"><Public/></Modifiers><IntType/><Parameters name="virtualToPhysical"><Parameter name="lineNo" dims="0" va="false"><IntType/></Parameter></Parameters><MethodBody name="virtualToPhysical" signature="(I)I"><IfStatement tid="53b2c3cf2e951d1143ec7250f31b65a8" __tid="Expression.BinaryOperator.Ge"><Ge><Name name="lineNo"/><FieldAccess name="virtualLineCount"/></Ge><ReturnStatement><Add><FieldAccess name="lineCount"/><ParenthesizedExpression tid="5b63641de09510fd0b5b8841e510f732" __tid="Expression.BinaryOperator.Sub"><Subt><Name name="lineNo"/><FieldAccess name="virtualLineCount"/></Subt></ParenthesizedExpression></Add></ReturnStatement></IfStatement><ReturnStatement><ArrayAccess><FieldAccess name="virtualLines"/><Name name="lineNo"/></ArrayAccess></ReturnStatement></MethodBody></MethodDeclaration></xdd:insert><xdd:insert xdd:stid="135" xdd:path="2/0/1/59_11"><MethodDeclaration name="getNextVisibleLine" signature="(I)I"><Modifiers name="getNextVisibleLine#m"><Public/></Modifiers><IntType/><Parameters name="getNextVisibleLine"><Parameter name="lineNo" dims="0" va="false"><IntType/></Parameter></Parameters><MethodBody name="getNextVisibleLine" signature="(I)I"><BasicForStatement><ForInit tid="e387bd88dec8c75297547e5092eae41e" __tid="LocalVariableDeclaration(false,)"><LocalVariableDeclaration vdids="i[0"><IntType/><VariableDeclarator name="i" dims="0" islocal="true"><Add><Name name="lineNo"/><IntegerLiteral value="1"/></Add></VariableDeclarator></LocalVariableDeclaration></ForInit><ForCond tid="67655a7cb53fb02a950cfd5aab8ee3c2" __tid="Expression.BinaryOperator.Lt"><Lt><Name name="i"/><FieldAccess name="lineCount"/></Lt></ForCond><ForUpdate tid="bdb8c889613f58d4d93169f9b8008aa4" __tid="Expression.UnaryOperator.PostIncrement"><PostIncrement><Name name="i"/></PostIncrement></ForUpdate><Block tid="" __tid="block"><IfStatement tid="3715a36a521d2cb5fd5793244d27bbc8" __tid="Primary.FieldAccess()"><FieldAccess name="visible"><ArrayAccess><FieldAccess name="lineInfo"/><Name name="i"/></ArrayAccess></FieldAccess><ReturnStatement><Name name="i"/></ReturnStatement></IfStatement></Block></BasicForStatement><ReturnStatement><Minus><IntegerLiteral value="1"/></Minus></ReturnStatement></MethodBody></MethodDeclaration></xdd:insert><xdd:insert xdd:stid="186" xdd:path="2/0/1/59_10"><MethodDeclaration name="getPrevVisibleLine" signature="(I)I"><Modifiers name="getPrevVisibleLine#m"><Public/></Modifiers><IntType/><Parameters name="getPrevVisibleLine"><Parameter name="lineNo" dims="0" va="false"><IntType/></Parameter></Parameters><MethodBody name="getPrevVisibleLine" signature="(I)I"><BasicForStatement><ForInit tid="4e0b2ea88dab65b81309eb39f970d72d" __tid="LocalVariableDeclaration(false,)"><LocalVariableDeclaration vdids="i[0"><IntType/><VariableDeclarator name="i" dims="0" islocal="true"><Subt><Name name="lineNo"/><IntegerLiteral value="1"/></Subt></VariableDeclarator></LocalVariableDeclaration></ForInit><ForCond tid="a18b1f5f57899b36b57baac55621cd2c" __tid="Expression.BinaryOperator.Ge"><Ge><Name name="i"/><IntegerLiteral value="0"/></Ge></ForCond><ForUpdate tid="a49736fcbf2575827b889156d7ff96f5" __tid="Expression.UnaryOperator.PostDecrement"><PostDecrement><Name name="i"/></PostDecrement></ForUpdate><Block tid="" __tid="block"><IfStatement tid="3715a36a521d2cb5fd5793244d27bbc8" __tid="Primary.FieldAccess()"><FieldAccess name="visible"><ArrayAccess><FieldAccess name="lineInfo"/><Name name="i"/></ArrayAccess></FieldAccess><ReturnStatement><Name name="i"/></ReturnStatement></IfStatement></Block></BasicForStatement><ReturnStatement><Minus><IntegerLiteral value="1"/></Minus></ReturnStatement></MethodBody></MethodDeclaration></xdd:insert><xdd:insert xdd:stid="151" xdd:path="2/0/1/59_9"><MethodDeclaration name="getFoldLevel" signature="(I)I"><Modifiers name="getFoldLevel#m"><Public/></Modifiers><IntType/><Parameters name="getFoldLevel"><Parameter name="line" dims="0" va="false"><IntType/></Parameter></Parameters><MethodBody name="getFoldLevel" signature="(I)I"><LocalVariableDeclarationStatement vdids="info[0"><ReferenceType name="LineInfo"/><VariableDeclarator name="info" dims="0" islocal="true"><ArrayAccess><FieldAccess name="lineInfo"/><Name name="line"/></ArrayAccess></VariableDeclarator></LocalVariableDeclarationStatement><IfStatement tid="86d8cb110fbe6d5fad99386bbedb04fc" __tid="Primary.FieldAccess()"><FieldAccess name="foldLevelValid"><Name name="info"/></FieldAccess><ReturnStatement><FieldAccess name="foldLevel"><Name name="info"/></FieldAccess></ReturnStatement><Block tid="" __tid="block"><LocalVariableDeclarationStatement vdids="changed[0"><BooleanType/><VariableDeclarator name="changed" dims="0" islocal="true"><False/></VariableDeclarator></LocalVariableDeclarationStatement><LocalVariableDeclarationStatement vdids="tabSize[0"><IntType/><VariableDeclarator name="tabSize" dims="0" islocal="true"><SimpleMethodInvocation name="getTabSize"><Arguments name="getTabSize"/></SimpleMethodInvocation></VariableDeclarator></LocalVariableDeclarationStatement><LocalVariableDeclarationStatement vdids="lineElement[0"><ReferenceType name="Element"/><VariableDeclarator name="lineElement" dims="0" islocal="true"><PrimaryMethodInvocation name="getElement"><SimpleMethodInvocation name="getDefaultRootElement"><Arguments name="getDefaultRootElement"/></SimpleMethodInvocation><Arguments name="getElement"><Name name="line"/></Arguments></PrimaryMethodInvocation></VariableDeclarator></LocalVariableDeclarationStatement><LocalVariableDeclarationStatement vdids="start[0"><IntType/><VariableDeclarator name="start" dims="0" islocal="true"><PrimaryMethodInvocation name="getStartOffset"><Name name="lineElement"/><Arguments name="getStartOffset"/></PrimaryMethodInvocation></VariableDeclarator></LocalVariableDeclarationStatement><TryStatement><Block tid="" __tid="try"><SimpleMethodInvocationStatement name="getText"><Arguments name="getText"><Name name="start"/><Subt><Subt><PrimaryMethodInvocation name="getEndOffset"><Name name="lineElement"/><Arguments name="getEndOffset"/></PrimaryMethodInvocation><Name name="start"/></Subt><IntegerLiteral value="1"/></Subt><FieldAccess name="seg"/></Arguments></SimpleMethodInvocationStatement></Block><CatchClause tid="40ea5ed23e5255548d8145d1ec3866c5" __tid="CatchParameter(,0)"><CatchParameter name="bl" dims="0"><ReferenceType name="BadLocationException"/></CatchParameter><Block tid="" __tid="catch-clause"><TypeMethodInvocationStatement name="Log" ident="log"><Arguments name="log"><Name name="Log.ERROR"/><This/><Name name="bl"/></Arguments></TypeMethodInvocationStatement></Block></CatchClause></TryStatement><LocalVariableDeclarationStatement vdids="offset[0"><IntType/><VariableDeclarator name="offset" dims="0" islocal="true"><AmbiguousName name="seg.offset"><AmbiguousName name="seg"/></AmbiguousName></VariableDeclarator></LocalVariableDeclarationStatement><LocalVariableDeclarationStatement vdids="count[0"><IntType/><VariableDeclarator name="count" dims="0" islocal="true"><AmbiguousName name="seg.count"><AmbiguousName name="seg"/></AmbiguousName></VariableDeclarator></LocalVariableDeclarationStatement><LocalVariableDeclarationStatement vdids="whitespace[0"><IntType/><VariableDeclarator name="whitespace" dims="0" islocal="true"><IntegerLiteral value="0"/></VariableDeclarator></LocalVariableDeclarationStatement><IfStatement tid="231191b71851abed6189f28f5be93f2d" __tid="Expression.BinaryOperator.Eq"><Eq><Name name="count"/><IntegerLiteral value="0"/></Eq><Block tid="" __tid="block"><IfStatement tid="0751003b671e7c3f99bcb33d7738189d" __tid="Expression.BinaryOperator.Neq"><NotEq><Name name="line"/><IntegerLiteral value="0"/></NotEq><AssignStatement tid=""><Name name="whitespace"/><SimpleMethodInvocation name="getFoldLevel"><Arguments name="getFoldLevel"><Subt><Name name="line"/><IntegerLiteral value="1"/></Subt></Arguments></SimpleMethodInvocation></AssignStatement><AssignStatement tid=""><Name name="whitespace"/><IntegerLiteral value="0"/></AssignStatement></IfStatement></Block><Block tid="" __tid="block"><LocalVariableDeclarationStatement vdids="seenNonWhitespace[0"><BooleanType/><VariableDeclarator name="seenNonWhitespace" dims="0" islocal="true"><False/></VariableDeclarator></LocalVariableDeclarationStatement><LabeledStatement label="loop"><BasicForStatement><ForInit tid="db4b1e0014366cd465c1c317d455ef82" __tid="LocalVariableDeclaration(false,)"><LocalVariableDeclaration vdids="i[0"><IntType/><VariableDeclarator name="i" dims="0" islocal="true"><IntegerLiteral value="0"/></VariableDeclarator></LocalVariableDeclaration></ForInit><ForCond tid="1332f47cf0add01df077311d1ddce75b" __tid="Expression.BinaryOperator.Lt"><Lt><Name name="i"/><Name name="count"/></Lt></ForCond><ForUpdate tid="bdb8c889613f58d4d93169f9b8008aa4" __tid="Expression.UnaryOperator.PostIncrement"><PostIncrement><Name name="i"/></PostIncrement></ForUpdate><Block tid="" __tid="block"><SwitchStatement><ArrayAccess><AmbiguousName name="seg.array"><AmbiguousName name="seg"/></AmbiguousName><Add><Name name="offset"/><Name name="i"/></Add></ArrayAccess><SwitchBlock><SwitchBlockStatementGroup><ConstantLabel><CharacterLiteral value=" "/></ConstantLabel><PostIncrementStatement><Name name="whitespace"/></PostIncrementStatement><BreakStatement/></SwitchBlockStatementGroup><SwitchBlockStatementGroup><ConstantLabel><CharacterLiteral value="\\t"/></ConstantLabel><AddAssignStatement tid=""><Name name="whitespace"/><ParenthesizedExpression tid="d9c124b660bb41c98c8fede99785e1c7" __tid="Expression.BinaryOperator.Sub"><Subt><Name name="tabSize"/><Mod><Name name="whitespace"/><Name name="tabSize"/></Mod></Subt></ParenthesizedExpression></AddAssignStatement><BreakStatement/></SwitchBlockStatementGroup><SwitchBlockStatementGroup><DefaultLabel/><AssignStatement tid=""><Name name="seenNonWhitespace"/><True/></AssignStatement><BreakStatement label="loop"/></SwitchBlockStatementGroup></SwitchBlock></SwitchStatement></Block></BasicForStatement></LabeledStatement><IfStatement tid="300d0686f682747425dbcea1b93ec700" __tid="Expression.UnaryOperator.Not"><Negation><Name name="seenNonWhitespace"/></Negation><Block tid="" __tid="block"><IfStatement tid="0751003b671e7c3f99bcb33d7738189d" __tid="Expression.BinaryOperator.Neq"><NotEq><Name name="line"/><IntegerLiteral value="0"/></NotEq><AssignStatement tid=""><Name name="whitespace"/><SimpleMethodInvocation name="getFoldLevel"><Arguments name="getFoldLevel"><Subt><Name name="line"/><IntegerLiteral value="1"/></Subt></Arguments></SimpleMethodInvocation></AssignStatement><AssignStatement tid=""><Name name="whitespace"/><IntegerLiteral value="0"/></AssignStatement></IfStatement></Block></IfStatement></Block></IfStatement><IfStatement tid="da78ff28ddb894a9ff040b096daa494e" __tid="Expression.BinaryOperator.Neq"><NotEq><FieldAccess name="foldLevel"><Name name="info"/></FieldAccess><Name name="whitespace"/></NotEq><Block tid="" __tid="block"><AssignStatement tid=""><FieldAccess name="foldLevel"><Name name="info"/></FieldAccess><Name name="whitespace"/></AssignStatement><SimpleMethodInvocationStatement name="fireFoldLevelsChanged"><Arguments name="fireFoldLevelsChanged"><Subt><Name name="line"/><IntegerLiteral value="1"/></Subt><Subt><Name name="line"/><IntegerLiteral value="1"/></Subt></Arguments></SimpleMethodInvocationStatement></Block></IfStatement><AssignStatement tid=""><FieldAccess name="foldLevelValid"><Name name="info"/></FieldAccess><True/></AssignStatement><ReturnStatement><Name name="whitespace"/></ReturnStatement></Block></IfStatement></MethodBody></MethodDeclaration></xdd:insert><xdd:insert xdd:stid="153" xdd:path="2/0/1/59_8"><MethodDeclaration name="isFoldStart" signature="(I)Z"><Modifiers name="isFoldStart#m"><Public/></Modifiers><BooleanType/><Parameters name="isFoldStart"><Parameter name="line" dims="0" va="false"><IntType/></Parameter></Parameters><MethodBody name="isFoldStart" signature="(I)Z"><IfStatement tid="b0fe3a200dd683556e16ec19fce8ab85" __tid="Expression.BinaryOperator.Eq"><Eq><Name name="line"/><Subt><FieldAccess name="lineCount"/><IntegerLiteral value="1"/></Subt></Eq><ReturnStatement><False/></ReturnStatement></IfStatement><ReturnStatement><Lt><SimpleMethodInvocation name="getFoldLevel"><Arguments name="getFoldLevel"><Name name="line"/></Arguments></SimpleMethodInvocation><SimpleMethodInvocation name="getFoldLevel"><Arguments name="getFoldLevel"><Add><Name name="line"/><IntegerLiteral value="1"/></Add></Arguments></SimpleMethodInvocation></Lt></ReturnStatement></MethodBody></MethodDeclaration></xdd:insert><xdd:insert xdd:stid="185" xdd:path="2/0/1/59_7"><MethodDeclaration name="isLineVisible" signature="(I)Z"><Modifiers name="isLineVisible#m"><Public/></Modifiers><BooleanType/><Parameters name="isLineVisible"><Parameter name="line" dims="0" va="false"><IntType/></Parameter></Parameters><MethodBody name="isLineVisible" signature="(I)Z"><ReturnStatement><FieldAccess name="visible"><ArrayAccess><FieldAccess name="lineInfo"/><Name name="line"/></ArrayAccess></FieldAccess></ReturnStatement></MethodBody></MethodDeclaration></xdd:insert><xdd:insert xdd:stid="107" xdd:path="2/0/1/59_6"><MethodDeclaration name="getLineInfo" signature=""><Modifiers name="getLineInfo#m"><Public/></Modifiers><ReferenceType name="LineInfo"/><Parameters name="getLineInfo"><Parameter name="line" dims="0" va="false"><IntType/></Parameter></Parameters><MethodBody name="getLineInfo" signature="(I)LLineInfo;"><ReturnStatement><ArrayAccess><FieldAccess name="lineInfo"/><Name name="line"/></ArrayAccess></ReturnStatement></MethodBody></MethodDeclaration></xdd:insert><xdd:insert xdd:stid="111" xdd:path="2/0/1/59_5"><MethodDeclaration name="isNextLineRequested" signature="()Z"><Modifiers name="isNextLineRequested#m"><Public/></Modifiers><BooleanType/><MethodBody name="isNextLineRequested" signature="()Z"><ReturnStatement><FieldAccess name="nextLineRequested"/></ReturnStatement></MethodBody></MethodDeclaration></xdd:insert><xdd:insert xdd:stid="145" xdd:path="2/0/1/59_4"><MethodDeclaration name="getMaxLineWidth" signature="(II)I"><Modifiers name="getMaxLineWidth#m"><Public/></Modifiers><IntType/><Parameters name="getMaxLineWidth"><Parameter name="start" dims="0" va="false"><IntType/></Parameter><Parameter name="len" dims="0" va="false"><IntType/></Parameter></Parameters><MethodBody name="getMaxLineWidth" signature="(II)I"><LocalVariableDeclarationStatement vdids="retVal[0"><IntType/><VariableDeclarator name="retVal" dims="0" islocal="true"><IntegerLiteral value="0"/></VariableDeclarator></LocalVariableDeclarationStatement><LocalVariableDeclarationStatement vdids="lines[0"><IntType/><VariableDeclarator name="lines" dims="0" islocal="true"><IntegerLiteral value="0"/></VariableDeclarator></LocalVariableDeclarationStatement><BasicForStatement><ForInit tid="27b4da74b871fcf2a2711f03908607ff" __tid="LocalVariableDeclaration(false,)"><LocalVariableDeclaration vdids="i[0"><IntType/><VariableDeclarator name="i" dims="0" islocal="true"><Name name="start"/></VariableDeclarator></LocalVariableDeclaration></ForInit><ForUpdate tid="bdb8c889613f58d4d93169f9b8008aa4" __tid="Expression.UnaryOperator.PostIncrement"><PostIncrement><Name name="i"/></PostIncrement></ForUpdate><Block tid="" __tid="block"><IfStatement tid="3f41b89d39c5785db55e87b067c0c965" __tid="Expression.BinaryOperator.Or"><Or><Ge><Name name="i"/><FieldAccess name="lineCount"/></Ge><Ge><Name name="lines"/></Ge></Or><BreakStatement/></IfStatement><LocalVariableDeclarationStatement vdids="info[0"><ReferenceType name="LineInfo"/><VariableDeclarator name="info" dims="0" islocal="true"><ArrayAccess><FieldAccess name="lineInfo"/><Name name="i"/></ArrayAccess></VariableDeclarator></LocalVariableDeclarationStatement><IfStatement tid="c83c10f25553a33a44fbfc3545e37bfc" __tid="Primary.FieldAccess()"><FieldAccess name="visible"><Name name="info"/></FieldAccess><Block tid="" __tid="block"><AssignStatement tid=""><Name name="retVal"/><TypeMethodInvocation name="Math" ident="max"><Arguments name="max"><FieldAccess name="width"><ArrayAccess><FieldAccess name="lineInfo"/><Name name="i"/></ArrayAccess></FieldAccess><Name name="retVal"/></Arguments></TypeMethodInvocation></AssignStatement><PostIncrementStatement><Name name="lines"/></PostIncrementStatement></Block></IfStatement></Block></BasicForStatement><ReturnStatement><Name name="retVal"/></ReturnStatement></MethodBody></MethodDeclaration></xdd:insert><xdd:move xdd:mid="4" xdd:path_from="2/0/1/59/3/3/0" xdd:path_to="2/0/1/59_4/3/2/2/0/0/1/0_1" xdd:parent="145" xdd:depth="7"/><xdd:insert xdd:stid="152" xdd:path="2/0/1/59_3"><MethodDeclaration name="setLineWidth" signature="(II)Z"><Modifiers name="setLineWidth#m"><Public/></Modifiers><BooleanType/><Parameters name="setLineWidth"><Parameter name="lineIndex" dims="0" va="false"><IntType/></Parameter><Parameter name="width" dims="0" va="false"><IntType/></Parameter></Parameters><MethodBody name="setLineWidth" signature="(II)Z"><LocalVariableDeclarationStatement vdids="info[0"><ReferenceType name="LineInfo"/><VariableDeclarator name="info" dims="0" islocal="true"><ArrayAccess><FieldAccess name="lineInfo"/><Name name="lineIndex"/></ArrayAccess></VariableDeclarator></LocalVariableDeclarationStatement><LocalVariableDeclarationStatement vdids="oldWidth[0"><IntType/><VariableDeclarator name="oldWidth" dims="0" islocal="true"><FieldAccess name="width"><Name name="info"/></FieldAccess></VariableDeclarator></LocalVariableDeclarationStatement><AssignStatement tid=""><FieldAccess name="width"><Name name="info"/></FieldAccess><Name name="width"/></AssignStatement><ReturnStatement><NotEq><Name name="width"/><Name name="oldWidth"/></NotEq></ReturnStatement></MethodBody></MethodDeclaration></xdd:insert><xdd:insert xdd:stid="126" xdd:path="2/0/1/59_2"><MethodDeclaration name="markTokens" signature=""><Modifiers name="markTokens#m"><Public/></Modifiers><ReferenceType name="LineInfo"/><Parameters name="markTokens"><Parameter name="lineIndex" dims="0" va="false"><IntType/></Parameter></Parameters><MethodBody name="markTokens" signature="(I)LLineInfo;"><LocalVariableDeclarationStatement vdids="info[0"><ReferenceType name="LineInfo"/><VariableDeclarator name="info" dims="0" islocal="true"><ArrayAccess><FieldAccess name="lineInfo"/><Name name="lineIndex"/></ArrayAccess></VariableDeclarator></LocalVariableDeclarationStatement><IfStatement tid="5639e00c4f6a8da4a8b40d0405853c84" __tid="Primary.FieldAccess()"><FieldAccess name="tokensValid"><Name name="info"/></FieldAccess><ReturnStatement><Name name="info"/></ReturnStatement></IfStatement><LocalVariableDeclarationStatement vdids="start[0"><IntType/><VariableDeclarator name="start" dims="0" islocal="true"><Subt><TypeMethodInvocation name="Math" ident="max"><Arguments name="max"><IntegerLiteral value="0"/><Subt><Name name="lineIndex"/><IntegerLiteral value="100"/></Subt></Arguments></TypeMethodInvocation><IntegerLiteral value="1"/></Subt></VariableDeclarator></LocalVariableDeclarationStatement><LocalVariableDeclarationStatement vdids="end[0"><IntType/><VariableDeclarator name="end" dims="0" islocal="true"><TypeMethodInvocation name="Math" ident="max"><Arguments name="max"><IntegerLiteral value="0"/><Subt><Name name="lineIndex"/><IntegerLiteral value="100"/></Subt></Arguments></TypeMethodInvocation></VariableDeclarator></LocalVariableDeclarationStatement><BasicForStatement><ForInit tid="216425d972c1a5ba839d3b6e4a92788b" __tid="LocalVariableDeclaration(false,)"><LocalVariableDeclaration vdids="i[0"><IntType/><VariableDeclarator name="i" dims="0" islocal="true"><Subt><Name name="lineIndex"/><IntegerLiteral value="1"/></Subt></VariableDeclarator></LocalVariableDeclaration></ForInit><ForCond tid="70bb619681e3c0a66e0dc7521ea0c473" __tid="Expression.BinaryOperator.Gt"><Gt><Name name="i"/><Name name="end"/></Gt></ForCond><ForUpdate tid="a49736fcbf2575827b889156d7ff96f5" __tid="Expression.UnaryOperator.PostDecrement"><PostDecrement><Name name="i"/></PostDecrement></ForUpdate><Block tid="" __tid="block"><IfStatement tid="46f70c25301c62eb239edc1e0d516989" __tid="Primary.FieldAccess()"><FieldAccess name="tokensValid"><ArrayAccess><FieldAccess name="lineInfo"/><Name name="i"/></ArrayAccess></FieldAccess><Block tid="" __tid="block"><AssignStatement tid=""><Name name="start"/><Name name="i"/></AssignStatement><BreakStatement/></Block></IfStatement></Block></BasicForStatement><LocalVariableDeclarationStatement vdids="prev[0"><ReferenceType name="LineInfo"/><VariableDeclarator name="prev" dims="0" islocal="true"/></LocalVariableDeclarationStatement><IfStatement tid="86a17a0a5d2e834844fb370227eb9643" __tid="Expression.BinaryOperator.Eq"><Eq><Name name="start"/><Minus><IntegerLiteral value="1"/></Minus></Eq><AssignStatement tid=""><Name name="prev"/><NullLiteral/></AssignStatement><AssignStatement tid=""><Name name="prev"/><ArrayAccess><FieldAccess name="lineInfo"/><Name name="start"/></ArrayAccess></AssignStatement></IfStatement><BasicForStatement><ForInit tid="b91279d5471175f0d66776c607c81f0a" __tid="LocalVariableDeclaration(false,)"><LocalVariableDeclaration vdids="i[0"><IntType/><VariableDeclarator name="i" dims="0" islocal="true"><Add><Name name="start"/><IntegerLiteral value="1"/></Add></VariableDeclarator></LocalVariableDeclaration></ForInit><ForCond tid="edf0eb648727272db3212a15bc722da2" __tid="Expression.BinaryOperator.Le"><Le><Name name="i"/><Name name="lineIndex"/></Le></ForCond><ForUpdate tid="bdb8c889613f58d4d93169f9b8008aa4" __tid="Expression.UnaryOperator.PostIncrement"><PostIncrement><Name name="i"/></PostIncrement></ForUpdate><Block tid="" __tid="block"><AssignStatement tid=""><Name name="info"/><ArrayAccess><FieldAccess name="lineInfo"/><Name name="i"/></ArrayAccess></AssignStatement><IfStatement tid="5639e00c4f6a8da4a8b40d0405853c84" __tid="Primary.FieldAccess()"><FieldAccess name="tokensValid"><Name name="info"/></FieldAccess><Block tid="" __tid="block"><AssignStatement tid=""><Name name="prev"/><Name name="info"/></AssignStatement><ContinueStatement/></Block></IfStatement><LocalVariableDeclarationStatement vdids="lineElement[0"><ReferenceType name="Element"/><VariableDeclarator name="lineElement" dims="0" islocal="true"><PrimaryMethodInvocation name="getElement"><Name name="map"/><Arguments name="getElement"><Name name="i"/></Arguments></PrimaryMethodInvocation></VariableDeclarator></LocalVariableDeclarationStatement><LocalVariableDeclarationStatement vdids="lineStart[0"><IntType/><VariableDeclarator name="lineStart" dims="0" islocal="true"><PrimaryMethodInvocation name="getStartOffset"><Name name="lineElement"/><Arguments name="getStartOffset"/></PrimaryMethodInvocation></VariableDeclarator></LocalVariableDeclarationStatement><TryStatement><Block tid="" __tid="try"><SimpleMethodInvocationStatement name="getText"><Arguments name="getText"><Name name="lineStart"/><Subt><Subt><PrimaryMethodInvocation name="getEndOffset"><Name name="lineElement"/><Arguments name="getEndOffset"/></PrimaryMethodInvocation><Name name="lineStart"/></Subt><IntegerLiteral value="1"/></Subt><FieldAccess name="seg"/></Arguments></SimpleMethodInvocationStatement></Block><CatchClause tid="abc6a572bab24e5194889fa84ac72bdf" __tid="CatchParameter(,0)"><CatchParameter name="e" dims="0"><ReferenceType name="BadLocationException"/></CatchParameter><Block tid="" __tid="catch-clause"><TypeMethodInvocationStatement name="Log" ident="log"><Arguments name="log"><Name name="Log.ERROR"/><This/><Name name="e"/></Arguments></TypeMethodInvocationStatement></Block></CatchClause></TryStatement><AssignStatement tid=""><FieldAccess name="lastToken"><Name name="info"/></FieldAccess><NullLiteral/></AssignStatement><LocalVariableDeclarationStatement vdids="oldRule[0"><ReferenceType name="ParserRule"/><VariableDeclarator name="oldRule" dims="0" islocal="true"><FieldAccess name="inRule"><FieldAccess name="context"><Name name="info"/></FieldAccess></FieldAccess></VariableDeclarator></LocalVariableDeclarationStatement><LocalVariableDeclarationStatement vdids="oldParent[0"><ReferenceType name="TokenMarker.LineContext"/><VariableDeclarator name="oldParent" dims="0" islocal="true"><FieldAccess name="parent"><FieldAccess name="context"><Name name="info"/></FieldAccess></FieldAccess></VariableDeclarator></LocalVariableDeclarationStatement><PrimaryMethodInvocationStatement name="markTokens"><FieldAccess name="tokenMarker"/><Arguments name="markTokens"><Name name="prev"/><Name name="info"/><FieldAccess name="seg"/></Arguments></PrimaryMethodInvocationStatement><LocalVariableDeclarationStatement vdids="newRule[0"><ReferenceType name="ParserRule"/><VariableDeclarator name="newRule" dims="0" islocal="true"><FieldAccess name="inRule"><FieldAccess name="context"><Name name="info"/></FieldAccess></FieldAccess></VariableDeclarator></LocalVariableDeclarationStatement><LocalVariableDeclarationStatement vdids="newParent[0"><ReferenceType name="TokenMarker.LineContext"/><VariableDeclarator name="newParent" dims="0" islocal="true"><FieldAccess name="parent"><FieldAccess name="context"><Name name="info"/></FieldAccess></FieldAccess></VariableDeclarator></LocalVariableDeclarationStatement><AssignStatement tid=""><FieldAccess name="tokensValid"><Name name="info"/></FieldAccess><True/></AssignStatement><IfStatement tid="3437fb5c906777dbbdb93194f0457efe" __tid="Expression.BinaryOperator.Neq"><NotEq><Name name="i"/><FieldAccess name="lastTokenizedLine"/></NotEq><Block tid="" __tid="block"><AssignStatement tid=""><FieldAccess name="nextLineRequested"/><False/></AssignStatement><AssignStatement tid=""><FieldAccess name="lastTokenizedLine"/><Name name="i"/></AssignStatement></Block></IfStatement><OrAssignStatement tid=""><FieldAccess name="nextLineRequested"/><ParenthesizedExpression tid="30acc386ff8abc3d9f8699a39e3d3b1b" __tid="Expression.BinaryOperator.Or"><Or><NotEq><Name name="oldRule"/><Name name="newRule"/></NotEq><NotEq><Name name="oldParent"/><Name name="newParent"/></NotEq></Or></ParenthesizedExpression></OrAssignStatement><PrimaryMethodInvocationStatement name="addToken"><Name name="info"/><Arguments name="addToken"><IntegerLiteral value="0"/><Name name="Token.END"/></Arguments></PrimaryMethodInvocationStatement><AssignStatement tid=""><Name name="prev"/><Name name="info"/></AssignStatement></Block></BasicForStatement><IfStatement tid="69ade1c221840574024dfa5d84f5c57f" __tid="Expression.BinaryOperator.And"><And><FieldAccess name="nextLineRequested"/><Gt><Subt><FieldAccess name="lineCount"/><Name name="lineIndex"/></Subt><IntegerLiteral value="1"/></Gt></And><Block tid="" __tid="block"><SimpleMethodInvocationStatement name="linesChanged"><Arguments name="linesChanged"><Add><Name name="lineIndex"/><IntegerLiteral value="1"/></Add><Subt><Subt><FieldAccess name="lineCount"/><Name name="lineIndex"/></Subt><IntegerLiteral value="1"/></Subt></Arguments></SimpleMethodInvocationStatement></Block></IfStatement><ReturnStatement><Name name="info"/></ReturnStatement></MethodBody></MethodDeclaration></xdd:insert><xdd:move xdd:mid="246" xdd:path_from="2/0/1/59/3/2" xdd:path_to="2/0/1/59_2/3/7_-1" xdd:parent="126" xdd:depth="2"/><xdd:insert xdd:stid="156" xdd:path="2/0/1/59_1"><MethodDeclaration name="paintSyntaxLine" signature=""><Modifiers name="paintSyntaxLine#m"><Public/></Modifiers><IntType/><Parameters name="paintSyntaxLine"><Parameter name="lineIndex" dims="0" va="false"><IntType/></Parameter><Parameter name="styles" dims="0" va="false"><ReferenceType name="SyntaxStyle" dimensions="1"/></Parameter><Parameter name="expander" dims="0" va="false"><ReferenceType name="TabExpander"/></Parameter><Parameter name="style" dims="0" va="false"><BooleanType/></Parameter><Parameter name="color" dims="0" va="false"><BooleanType/></Parameter><Parameter name="gfx" dims="0" va="false"><ReferenceType name="Graphics"/></Parameter><Parameter name="background" dims="0" va="false"><ReferenceType name="Color"/></Parameter><Parameter name="x" dims="0" va="false"><IntType/></Parameter><Parameter name="y" dims="0" va="false"><IntType/></Parameter></Parameters><MethodBody name="paintSyntaxLine" signature="(I[LSyntaxStyle;LTabExpander;ZZLGraphics;LColor;II)I"><LocalVariableDeclarationStatement vdids="info[0"><ReferenceType name="LineInfo"/><VariableDeclarator name="info" dims="0" islocal="true"><ArrayAccess><FieldAccess name="lineInfo"/><Name name="lineIndex"/></ArrayAccess></VariableDeclarator></LocalVariableDeclarationStatement><IfStatement tid="5639e00c4f6a8da4a8b40d0405853c84" __tid="Primary.FieldAccess()"><FieldAccess name="tokensValid"><Name name="info"/></FieldAccess><Block tid="" __tid="block"><LocalVariableDeclarationStatement vdids="lineElement[0"><ReferenceType name="Element"/><VariableDeclarator name="lineElement" dims="0" islocal="true"></VariableDeclarator></LocalVariableDeclarationStatement><LocalVariableDeclarationStatement vdids="lineStart[0"><IntType/><VariableDeclarator name="lineStart" dims="0" islocal="true"><PrimaryMethodInvocation name="getStartOffset"><Name name="lineElement"/><Arguments name="getStartOffset"/></PrimaryMethodInvocation></VariableDeclarator></LocalVariableDeclarationStatement><TryStatement><Block tid="" __tid="try"><SimpleMethodInvocationStatement name="getText"><Arguments name="getText"><Name name="lineStart"/><Subt><Subt><PrimaryMethodInvocation name="getEndOffset"><Name name="lineElement"/><Arguments name="getEndOffset"/></PrimaryMethodInvocation><Name name="lineStart"/></Subt><IntegerLiteral value="1"/></Subt><FieldAccess name="seg"/></Arguments></SimpleMethodInvocationStatement></Block><CatchClause tid="abc6a572bab24e5194889fa84ac72bdf" __tid="CatchParameter(,0)"><CatchParameter name="e" dims="0"><ReferenceType name="BadLocationException"/></CatchParameter><Block tid="" __tid="catch-clause"><TypeMethodInvocationStatement name="Log" ident="log"><Arguments name="log"><Name name="Log.ERROR"/><This/><Name name="e"/></Arguments></TypeMethodInvocationStatement></Block></CatchClause></TryStatement></Block><SimpleMethodInvocationStatement name="markTokens"><Arguments name="markTokens"><Name name="lineIndex"/></Arguments></SimpleMethodInvocationStatement></IfStatement><LocalVariableDeclarationStatement vdids="tokens[0"><ReferenceType name="Token"/><VariableDeclarator name="tokens" dims="0" islocal="true"><FieldAccess name="firstToken"><Name name="info"/></FieldAccess></VariableDeclarator></LocalVariableDeclarationStatement><LocalVariableDeclarationStatement vdids="defaultFont[0"><ReferenceType name="Font"/><VariableDeclarator name="defaultFont" dims="0" islocal="true"><PrimaryMethodInvocation name="getFont"><Name name="gfx"/><Arguments name="getFont"/></PrimaryMethodInvocation></VariableDeclarator></LocalVariableDeclarationStatement><LocalVariableDeclarationStatement vdids="defaultColor[0"><ReferenceType name="Color"/><VariableDeclarator name="defaultColor" dims="0" islocal="true"><PrimaryMethodInvocation name="getColor"><Name name="gfx"/><Arguments name="getColor"/></PrimaryMethodInvocation></VariableDeclarator></LocalVariableDeclarationStatement><LocalVariableDeclarationStatement vdids="originalOffset[0"><IntType/><VariableDeclarator name="originalOffset" dims="0" islocal="true"><AmbiguousName name="seg.offset"><AmbiguousName name="seg"/></AmbiguousName></VariableDeclarator></LocalVariableDeclarationStatement><LocalVariableDeclarationStatement vdids="originalCount[0"><IntType/><VariableDeclarator name="originalCount" dims="0" islocal="true"><AmbiguousName name="seg.count"><AmbiguousName name="seg"/></AmbiguousName></VariableDeclarator></LocalVariableDeclarationStatement><LocalVariableDeclarationStatement vdids="offset[0"><IntType/><VariableDeclarator name="offset" dims="0" islocal="true"><IntegerLiteral value="0"/></VariableDeclarator></LocalVariableDeclarationStatement><BasicForStatement><Block tid="" __tid="block"><LocalVariableDeclarationStatement vdids="id[0"><ByteType/><VariableDeclarator name="id" dims="0" islocal="true"><FieldAccess name="id"><Name name="tokens"/></FieldAccess></VariableDeclarator></LocalVariableDeclarationStatement><IfStatement tid="88f1a84387ecf5212f2242f174eed0c9" __tid="Expression.BinaryOperator.Eq"><Eq><Name name="id"/><Name name="Token.END"/></Eq><BreakStatement/></IfStatement><LocalVariableDeclarationStatement vdids="length[0"><IntType/><VariableDeclarator name="length" dims="0" islocal="true"><FieldAccess name="length"><Name name="tokens"/></FieldAccess></VariableDeclarator></LocalVariableDeclarationStatement><AssignStatement tid=""><AmbiguousName name="seg.count"><AmbiguousName name="seg"/></AmbiguousName><Name name="length"/></AssignStatement><IfStatement tid="c816a54431a755b69c6d2c484f5babea" __tid="Expression.BinaryOperator.Eq"><Eq><Name name="id"/><Name name="Token.NULL"/></Eq><Block tid="" __tid="block"><PrimaryMethodInvocationStatement name="setColor"><Name name="gfx"/><Arguments name="setColor"><Name name="defaultColor"/></Arguments></PrimaryMethodInvocationStatement><PrimaryMethodInvocationStatement name="setFont"><Name name="gfx"/><Arguments name="setFont"><Name name="defaultFont"/></Arguments></PrimaryMethodInvocationStatement></Block><Block tid="" __tid="block"><LocalVariableDeclarationStatement vdids="bg[0"><ReferenceType name="Color"/><VariableDeclarator name="bg" dims="0" islocal="true"><PrimaryMethodInvocation name="getBackgroundColor"><ArrayAccess><Name name="styles"/><Name name="id"/></ArrayAccess><Arguments name="getBackgroundColor"/></PrimaryMethodInvocation></VariableDeclarator></LocalVariableDeclarationStatement><IfStatement tid="3ff707b892f9e64a9fdcbe5f4ca90e8a" __tid="Expression.BinaryOperator.And"><And><Name name="color"/><NotEq><Name name="bg"/><NullLiteral/></NotEq></And><Block tid="" __tid="block"><LocalVariableDeclarationStatement vdids="fm[0"><ReferenceType name="FontMetrics"/><VariableDeclarator name="fm" dims="0" islocal="true"><ParenthesizedExpression tid="1e73f771ee31ee2c263bd4646ee701d2" __tid="Expression.Cond"><Conditional><Name name="style"/><PrimaryMethodInvocation name="getFontMetrics"><ArrayAccess><Name name="styles"/><Name name="id"/></ArrayAccess><Arguments name="getFontMetrics"><Name name="defaultFont"/></Arguments></PrimaryMethodInvocation><PrimaryMethodInvocation name="getFontMetrics"><Name name="gfx"/><Arguments name="getFontMetrics"><Name name="defaultFont"/></Arguments></PrimaryMethodInvocation></Conditional></ParenthesizedExpression></VariableDeclarator></LocalVariableDeclarationStatement><LocalVariableDeclarationStatement vdids="width[0"><IntType/><VariableDeclarator name="width" dims="0" islocal="true"><TypeMethodInvocation name="Utilities" ident="getTabbedTextWidth"><Arguments name="getTabbedTextWidth"><FieldAccess name="seg"/><Name name="fm"/><Name name="x"/><Name name="expander"/><IntegerLiteral value="0"/></Arguments></TypeMethodInvocation></VariableDeclarator></LocalVariableDeclarationStatement><LocalVariableDeclarationStatement vdids="height[0"><IntType/><VariableDeclarator name="height" dims="0" islocal="true"><PrimaryMethodInvocation name="getHeight"><Name name="fm"/><Arguments name="getHeight"/></PrimaryMethodInvocation></VariableDeclarator></LocalVariableDeclarationStatement><LocalVariableDeclarationStatement vdids="descent[0"><IntType/><VariableDeclarator name="descent" dims="0" islocal="true"><PrimaryMethodInvocation name="getDescent"><Name name="fm"/><Arguments name="getDescent"/></PrimaryMethodInvocation></VariableDeclarator></LocalVariableDeclarationStatement><LocalVariableDeclarationStatement vdids="leading[0"><IntType/><VariableDeclarator name="leading" dims="0" islocal="true"><PrimaryMethodInvocation name="getLeading"><Name name="fm"/><Arguments name="getLeading"/></PrimaryMethodInvocation></VariableDeclarator></LocalVariableDeclarationStatement><PrimaryMethodInvocationStatement name="setColor"><Name name="gfx"/><Arguments name="setColor"><Name name="background"/></Arguments></PrimaryMethodInvocationStatement><PrimaryMethodInvocationStatement name="setXORMode"><Name name="gfx"/><Arguments name="setXORMode"><Name name="bg"/></Arguments></PrimaryMethodInvocationStatement><PrimaryMethodInvocationStatement name="fillRect"><Name name="gfx"/><Arguments name="fillRect"><Name name="x"/><Add><Add><Subt><Name name="y"/><Name name="height"/></Subt><Name name="descent"/></Add><Name name="leading"/></Add><Name name="width"/><Name name="height"/></Arguments></PrimaryMethodInvocationStatement><PrimaryMethodInvocationStatement name="setPaintMode"><Name name="gfx"/><Arguments name="setPaintMode"/></PrimaryMethodInvocationStatement></Block></IfStatement><IfStatement tid="2f390091d2f4c4b65de1206ce83e1086" __tid="Primary.Name()"><Name name="style"/><PrimaryMethodInvocationStatement name="setFont"><Name name="gfx"/><Arguments name="setFont"><PrimaryMethodInvocation name="getStyledFont"><ArrayAccess><Name name="styles"/><Name name="id"/></ArrayAccess><Arguments name="getStyledFont"><Name name="defaultFont"/></Arguments></PrimaryMethodInvocation></Arguments></PrimaryMethodInvocationStatement></IfStatement><IfStatement tid="84e962ab99d3d7309405dcf880b31d09" __tid="Primary.Name()"><Name name="color"/><PrimaryMethodInvocationStatement name="setColor"><Name name="gfx"/><Arguments name="setColor"><PrimaryMethodInvocation name="getForegroundColor"><ArrayAccess><Name name="styles"/><Name name="id"/></ArrayAccess><Arguments name="getForegroundColor"/></PrimaryMethodInvocation></Arguments></PrimaryMethodInvocationStatement></IfStatement></Block></IfStatement><AssignStatement tid=""><Name name="x"/><TypeMethodInvocation name="Utilities" ident="drawTabbedText"><Arguments name="drawTabbedText"><FieldAccess name="seg"/><Name name="x"/><Name name="y"/><Name name="gfx"/><Name name="expander"/><IntegerLiteral value="0"/></Arguments></TypeMethodInvocation></AssignStatement><AddAssignStatement tid=""><AmbiguousName name="seg.offset"><AmbiguousName name="seg"/></AmbiguousName><Name name="length"/></AddAssignStatement><AddAssignStatement tid=""><Name name="offset"/><Name name="length"/></AddAssignStatement><AssignStatement tid=""><Name name="tokens"/><FieldAccess name="next"><Name name="tokens"/></FieldAccess></AssignStatement></Block></BasicForStatement><AssignStatement tid=""><AmbiguousName name="seg.offset"><AmbiguousName name="seg"/></AmbiguousName><Name name="originalOffset"/></AssignStatement><AssignStatement tid=""><AmbiguousName name="seg.count"><AmbiguousName name="seg"/></AmbiguousName><Name name="originalCount"/></AssignStatement><ReturnStatement><Name name="x"/></ReturnStatement></MethodBody></MethodDeclaration></xdd:insert><xdd:move xdd:mid="241" xdd:path_from="2/0/1/57/3/2/1/1" xdd:path_to="2/0/1/59_1/3/1/1/0/1/0" xdd:parent="156" xdd:depth="6"/><xdd:insert xdd:stid="181" xdd:path="2/0/1/59_1/3/1/1/0/1/0/1/0" xdd:parent="m241" xdd:depth="2"><Name name="lineIndex"/></xdd:insert><xdd:insert xdd:stid="149" xdd:path="2/0/1/59/3/4/3/1/1" xdd:boundary="0_1"><Add><Name name="start"/></Add></xdd:insert><xdd:insert xdd:stid="94" xdd:path="2/0/1/55_1"><MethodDeclaration name="indentLines" signature="(II)V"><Modifiers name="indentLines#m"><Public/></Modifiers><Void/><Parameters name="indentLines"><Parameter name="start" dims="0" va="false"><IntType/></Parameter><Parameter name="end" dims="0" va="false"><IntType/></Parameter></Parameters><MethodBody name="indentLines" signature="(II)V"><SimpleMethodInvocationStatement name="beginCompoundEdit"><Arguments name="beginCompoundEdit"/></SimpleMethodInvocationStatement><BasicForStatement><ForInit tid="27b4da74b871fcf2a2711f03908607ff" __tid="LocalVariableDeclaration(false,)"><LocalVariableDeclaration vdids="i[0"><IntType/><VariableDeclarator name="i" dims="0" islocal="true"><Name name="start"/></VariableDeclarator></LocalVariableDeclaration></ForInit><ForCond tid="4a39b2fc0eb969453f78954990c3ba12" __tid="Expression.BinaryOperator.Le"><Le><Name name="i"/><Name name="end"/></Le></ForCond><ForUpdate tid="bdb8c889613f58d4d93169f9b8008aa4" __tid="Expression.UnaryOperator.PostIncrement"><PostIncrement><Name name="i"/></PostIncrement></ForUpdate><SimpleMethodInvocationStatement name="indentLine"><Arguments name="indentLine"><Name name="i"/><True/><True/></Arguments></SimpleMethodInvocationStatement></BasicForStatement><SimpleMethodInvocationStatement name="endCompoundEdit"><Arguments name="endCompoundEdit"/></SimpleMethodInvocationStatement></MethodBody></MethodDeclaration></xdd:insert><xdd:insert xdd:stid="127" xdd:path="2/0/1/53/3/5/1" xdd:boundary="0"><Block tid="" __tid="block"></Block></xdd:insert><xdd:insert xdd:stid="179" xdd:path="2/0/1/53/3/5/1/1/0/1/0_1"><NullLiteral/></xdd:insert><xdd:insert xdd:stid="125" xdd:path="2/0/1/44_1"><MethodDeclaration name="insideCompoundEdit" signature="()Z"><Modifiers name="insideCompoundEdit#m"><Public/></Modifiers><BooleanType/><MethodBody name="insideCompoundEdit" signature="()Z"><ReturnStatement><NotEq><FieldAccess name="compoundEdit"/><NullLiteral/></NotEq></ReturnStatement></MethodBody></MethodDeclaration></xdd:insert><xdd:insert xdd:stid="138" xdd:path="2/0/1/37/3/2/1" xdd:boundary="0"><Block tid="" __tid="block"></Block></xdd:insert><xdd:insert xdd:stid="174" xdd:path="2/0/1/37/3/2/1/1/0/1/0_1"><NullLiteral/></xdd:insert><xdd:insert xdd:stid="106" xdd:path="2/0/1/20/3/4/1/4/1/0/0_-1"><FieldAccess name="GUIUtilities"/></xdd:insert><xdd:insert xdd:stid="97" xdd:path="2/0/1/20/3/4/1/1/1/1/1/0/1/0_1"><Name name="view"/></xdd:insert><xdd:move xdd:mid="216" xdd:path_from="2/0/1/20/3/0" xdd:path_to="2/0/1/20/3/1_3"/><xdd:insert xdd:stid="114" xdd:path="2/0/1/20/3/1_2"><IfStatement tid="7a08d96a58ca26c85b4f427d3555982d" __tid="Expression.BinaryOperator.Neq"><NotEq><Name name="newReadOnly"/><SimpleMethodInvocation name="getFlag"><Arguments name="getFlag"><FieldAccess name="READ_ONLY"/></Arguments></SimpleMethodInvocation></NotEq><Block tid="" __tid="block"><PrimaryMethodInvocationStatement name="send"><FieldAccess name="EditBus"/><Arguments name="send"><StandardInstanceCreation name="BufferUpdate"><ReferenceType name="BufferUpdate"/><Arguments name="BufferUpdate"><This/><Name name="view"/><Name name="BufferUpdate.DIRTY_CHANGED"/></Arguments></StandardInstanceCreation></Arguments></PrimaryMethodInvocationStatement></Block></IfStatement></xdd:insert><xdd:move xdd:mid="192" xdd:path_from="2/0/1/7/2/0" xdd:path_to="2/0/1/20/3/1_2/1/0_-1" xdd:parent="114" xdd:depth="2" xdd:boundary_from="0/0;0/1"/><xdd:insert xdd:stid="137" xdd:path="2/0/1/20/3/1_2/1/0/0/0_1" xdd:parent="m192" xdd:depth="2"><Name name="newReadOnly"/></xdd:insert><xdd:insert xdd:stid="129" xdd:path="2/0/1/20/3/1_2/1/0/0/0_-1" xdd:parent="m192" xdd:depth="2"><FieldAccess name="READ_ONLY"/></xdd:insert><xdd:insert xdd:stid="130" xdd:path="2/0/1/20/3/1_1"><LocalVariableDeclarationStatement vdids="newReadOnly[0"><BooleanType/><VariableDeclarator name="newReadOnly" dims="0" islocal="true"><Negation><PrimaryMethodInvocation name="canWrite"><FieldAccess name="file"/><Arguments name="canWrite"/></PrimaryMethodInvocation></Negation></VariableDeclarator></LocalVariableDeclarationStatement></xdd:insert><xdd:insert xdd:stid="108" xdd:path="2/0/1/17/3/10/1/0/2/0/2/2/1/3/1/0/1/0_1"><Name name="view"/></xdd:insert><xdd:insert xdd:stid="184" xdd:path="2/0/1/17/3/10/1/0/2/0/2/2/1/0/1/0/0/0_-1"><QualifiedThis name="Buffer"/></xdd:insert><xdd:insert xdd:stid="122" xdd:path="2/0/1/17/3/10/1/0/2/0/2/2/1/0/0/0/0_-1"><QualifiedThis name="Buffer"/></xdd:insert><xdd:insert xdd:stid="142" xdd:path="2/0/1/17/3/4/1/0/1/0_1"><Name name="view"/></xdd:insert><xdd:insert xdd:stid="147" xdd:path="2/0/1/17/3/2/1/1/1/1/1/0/0/0_1"><StringLiteral value="filechanged-save"/></xdd:insert><xdd:insert xdd:stid="123" xdd:path="2/0/1/17/3/2/1/1/1/1/1/0/0_-1"><FieldAccess name="GUIUtilities"/></xdd:insert><xdd:insert xdd:stid="113" xdd:path="2/0/1/12/3/6/1/0/2/0/2/11_1"><TryStatement><Block tid="" __tid="try"><LocalVariableDeclarationStatement vdids="collapseFolds[0"><IntType/><VariableDeclarator name="collapseFolds" dims="0" islocal="true"><PrimaryMethodInvocation name="intValue"><ParenthesizedExpression tid="84752143017c8097e36536cfb2412b6a" __tid="Expression.Cast"><Cast><ReferenceType name="Integer"/><SimpleMethodInvocation name="getProperty"><Arguments name="getProperty"><StringLiteral value="collapseFolds"/></Arguments></SimpleMethodInvocation></Cast></ParenthesizedExpression><Arguments name="intValue"/></PrimaryMethodInvocation></VariableDeclarator></LocalVariableDeclarationStatement><IfStatement tid="8badd2ef1a0147176b7a6f93f30b695e" __tid="Expression.BinaryOperator.Neq"><NotEq><Name name="collapseFolds"/><IntegerLiteral value="0"/></NotEq><SimpleMethodInvocationStatement name="expandFolds"><Arguments name="expandFolds"><Name name="collapseFolds"/></Arguments></SimpleMethodInvocationStatement></IfStatement></Block><CatchClause tid="e58718afcb49355259290b30b6e2b97f" __tid="CatchParameter(,0)"><CatchParameter name="e" dims="0"><ReferenceType name="Exception"/></CatchParameter><Block tid="" __tid="catch-clause"/></CatchClause></TryStatement></xdd:insert><xdd:insert xdd:stid="118" xdd:path="2/0/1/12/3/6/1/0/2/0/2/10" xdd:boundary="1/0;1/0_1"><IfStatement tid="7f96868b165ee213360a53be3a040ee3" __tid="Expression.UnaryOperator.Not"><Negation><SimpleMethodInvocation name="getFlag"><Arguments name="getFlag"><FieldAccess name="TEMPORARY"/></Arguments></SimpleMethodInvocation></Negation><Block tid="" __tid="block"></Block></IfStatement></xdd:insert><xdd:insert xdd:stid="128" xdd:path="2/0/1/12/3/6/1/0/2/0/2/11/1/0/1/0_1"><Name name="view"/></xdd:insert><xdd:insert xdd:stid="161" xdd:path="2/0/1/12/3/6/1/0/2/0/2/10/1/0/1/0_1"><Name name="view"/></xdd:insert><xdd:insert xdd:stid="175" xdd:path="2/0/1/12/3/6/1/0/2/0/2/1/2/0_1"><PrimaryMethodInvocationStatement name="remove"><SimpleMethodInvocation name="getDocumentProperties"><Arguments name="getDocumentProperties"/></SimpleMethodInvocation><Arguments name="remove"><StringLiteral value="indentSize"/></Arguments></PrimaryMethodInvocationStatement></xdd:insert><xdd:insert xdd:stid="99" xdd:path="2/0/1/12/3/2/1/0/1/0_1"><Name name="view"/></xdd:insert><xdd:insert xdd:stid="170" xdd:path="2/0/1/11/3/0/1/1/1/0/0/0_1"><StringLiteral value="changedreload"/></xdd:insert><xdd:insert xdd:stid="132" xdd:path="2/0/1/11/3/0/1/1/1/0/0_-1"><FieldAccess name="GUIUtilities"/></xdd:insert><xdd:insert xdd:stid="157" xdd:path="2/0/1/10/3/39/3/6/1/3_2"><Name name="color"/></xdd:insert><xdd:insert xdd:stid="116" xdd:path="2/0/1/10/3/39/3/6/1/3_1"><Name name="style"/></xdd:insert><xdd:insert xdd:stid="169" xdd:path="2/0/1/10/3/28_2"><LocalVariableDeclarationStatement vdids="color[0"><BooleanType/><VariableDeclarator name="color" dims="0" islocal="true"></VariableDeclarator></LocalVariableDeclarationStatement></xdd:insert><xdd:move xdd:mid="207" xdd:path_from="2/0/1/10/3/20/2/0/1/0" xdd:path_to="2/0/1/10/3/28_2/1/0" xdd:parent="169" xdd:depth="2"/><xdd:insert xdd:stid="159" xdd:path="2/0/1/10/3/28_1"><LocalVariableDeclarationStatement vdids="style[0"><BooleanType/><VariableDeclarator name="style" dims="0" islocal="true"><PrimaryMethodInvocation name="getBooleanProperty"><FieldAccess name="jEdit"/><Arguments name="getBooleanProperty"><StringLiteral value="print.style"/></Arguments></PrimaryMethodInvocation></VariableDeclarator></LocalVariableDeclarationStatement></xdd:insert><xdd:move xdd:mid="218" xdd:path_from="2/0/1/7/2/0/0/1/0" xdd:path_to="2/0/1/7/2/1/0/0_1"/><xdd:insert xdd:stid="141" xdd:path="1/11_1"><SingleTypeImportDeclaration name="org.gjt.sp.jedit.search.RESearchMatcher"/></xdd:insert><xdd:delete xdd:path="2/0/1/7/2/0/0/1" xdd:boundary="0"></xdd:delete><xdd:delete xdd:path="2/0/1/11/3/0/1/1/1/0/0/1" xdd:boundary="1/1"></xdd:delete><xdd:delete xdd:path="2/0/1/59/3/0/0"></xdd:delete><xdd:delete xdd:path="2/0/1/10/3/39/3/6/1/0"></xdd:delete><xdd:delete xdd:path="2/0/1/76/3/1/1/2/0"></xdd:delete><xdd:delete xdd:path="1/9"></xdd:delete><xdd:delete xdd:path="2/0/1/59/3/4/3/1/0"></xdd:delete><xdd:delete xdd:path="2/0/1/57/3/2" xdd:boundary="1/1"></xdd:delete><xdd:delete xdd:path="2/0/1/7/2/1/0/0"></xdd:delete><xdd:delete xdd:path="2/0/1/17/3/2/1/1/1/1/1/0/0/2"></xdd:delete><xdd:delete xdd:path="2/0/1/77/3/1/1/3/0"></xdd:delete><xdd:delete xdd:path="2/0/1/55/3/8/1/0/0/0/1/1/2/0"></xdd:delete><xdd:delete xdd:path="2/0/1/11/3/0/1/1/1/0/0/2"></xdd:delete><xdd:delete xdd:path="2/0/1/90/2/0"></xdd:delete><xdd:delete xdd:path="2/0/1/88" xdd:boundary="2/0"></xdd:delete><xdd:delete xdd:path="2/0/1/109/3/2/1/0/0/1" xdd:boundary="1/1"></xdd:delete><xdd:delete xdd:path="2/0/1/76/3/1/2/0/0"></xdd:delete><xdd:delete xdd:path="2/0/1/77/3/1/1/3/1/0" xdd:boundary="0"></xdd:delete><xdd:delete xdd:path="2/0/1/20/3/4/1/4/1/0/0/2"></xdd:delete><xdd:delete xdd:path="2/0/1/20/3/4/1/4/1/0/0/1" xdd:boundary="1/0;1/1"></xdd:delete><xdd:delete xdd:path="2/0/1/59/3/3" xdd:boundary="0"></xdd:delete><xdd:delete xdd:path="2/0/1/7/2/0/0/0"></xdd:delete><xdd:delete xdd:path="2/0/1/77/3/1/1/2/1/1/0" xdd:boundary="0"></xdd:delete><xdd:delete xdd:path="2/0/1/76/3/1/1/2/1/1/0" xdd:boundary="0"></xdd:delete><xdd:delete xdd:path="2/0/1/77/3/1/2/0/0"></xdd:delete><xdd:delete xdd:path="2/0/1/59/3/1" xdd:boundary="0;1/0"></xdd:delete><xdd:delete xdd:path="2/0/1/10/3/20" xdd:boundary="1;2/0/1/0"></xdd:delete><xdd:delete xdd:path="2/0/1/8"></xdd:delete><xdd:delete xdd:path="2/0/1/17/3/2/1/1/1/1/1/0/0/1" xdd:boundary="1/1"></xdd:delete><xdd:delete xdd:path="2/0/1/109/3/2/1/0/0/2"></xdd:delete><xdd:delete xdd:path="2/0/1/59/3/4/3/0"></xdd:delete><xdd:delete xdd:path="2/0/1/10/3/19"></xdd:delete><xdd:delete xdd:path="2/0/1/118" xdd:boundary="1/0/3/0;1/1/3/0"></xdd:delete><xdd:delete xdd:path="2/0/1/57/3/1/1"></xdd:delete><xdd:delete xdd:path="2/0/1/45/3/0"></xdd:delete><xdd:delete xdd:path="2/0/1/57/3/0" xdd:boundary="0/1"></xdd:delete><xdd:delete xdd:path="2/0/1/77/3/1/1/2/0"></xdd:delete><xdd:delete xdd:path="2/0/1/56"></xdd:delete><xdd:delete xdd:path="2/0/1/73/1/5"></xdd:delete><xdd:delete xdd:path="2/0/1/76/3/1/1/3/0"></xdd:delete></xdd:delta>